Grammar

    0 $accept: start $end

    1 start: program '\n'

    2 program: stmt_list

    3 stmt_list: block_stmt
    4          | stmt_list func_def

    5 block_stmt: stmt
    6           | block_stmt stmt
    7           | block_stmt COMMENT

    8 stmt: matched
    9     | unmatched
   10     | error NEWLINE

   11 func_def: FUNCTION_DEF type_def IDENTIFIER LEFT_PARANTHESIS argument_list RIGHT_PARANTHESIS LEFT_CURLY_BRACKET block_stmt RIGHT_CURLY_BRACKET

   12 matched: IF LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS matched ELSE matched
   13        | unconditional_stmt

   14 unmatched: IF LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS stmt
   15          | IF LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS matched ELSE unmatched

   16 argument_list: TYPE_ID IDENTIFIER
   17              | TYPE_ID IDENTIFIER COMMA argument_list
   18              | %empty

   19 unconditional_stmt: assign_stmt
   20                   | declaration_stmt
   21                   | func_call
   22                   | loop
   23                   | reserved_stmt
   24                   | primitive_function_call
   25                   | increment_stmt
   26                   | decrement_stmt

   27 increment_stmt: IDENTIFIER INCREMENT_OP SEMI_COLON

   28 decrement_stmt: IDENTIFIER DECREMENT_OP SEMI_COLON

   29 assign_stmt: IDENTIFIER ASSIGNMENT_OP expression SEMI_COLON

   30 declaration_stmt: TYPE_ID identifier_list SEMI_COLON
   31                 | TYPE_ID identifier_list ASSIGNMENT_OP expression SEMI_COLON

   32 identifier_list: IDENTIFIER
   33                | IDENTIFIER COMMA identifier_list

   34 expression: non_numeric_const
   35           | arith_op
   36           | func_call

   37 type_def: TYPE_ID
   38         | VOID_TYPE

   39 func_call: IDENTIFIER LEFT_PARANTHESIS arguments RIGHT_PARANTHESIS SEMI_COLON
   40          | IDENTIFIER DOT IDENTIFIER SEMI_COLON

   41 arguments: IDENTIFIER
   42          | const
   43          | IDENTIFIER COMMA arguments
   44          | %empty
   45          | const COMMA arguments

   46 reserved_stmt: RETURN SEMI_COLON
   47              | RETURN IDENTIFIER SEMI_COLON
   48              | RETURN const SEMI_COLON
   49              | BREAK SEMI_COLON
   50              | CONTINUE SEMI_COLON

   51 const: numeric_const
   52      | non_numeric_const

   53 numeric_const: INT_LITERAL
   54              | FLOAT_LITERAL

   55 non_numeric_const: BOOL_LITERAL
   56                  | STRING_LITERAL
   57                  | CHAR_LITERAL

   58 arith_op: arith_op ADDITION_OP term
   59         | arith_op SUBTRACTION_OP term
   60         | term

   61 term: term MULTIPLICATION_OP factor
   62     | term DIVISION_OP factor
   63     | factor

   64 factor: numeric_const
   65       | IDENTIFIER
   66       | LEFT_PARANTHESIS arith_op RIGHT_PARANTHESIS

   67 primitive_function_call: DISPLAY_FUNC_CALL LEFT_PARANTHESIS expression RIGHT_PARANTHESIS SEMI_COLON
   68                        | DISPLAY_FUNC_CALL LEFT_PARANTHESIS RIGHT_PARANTHESIS SEMI_COLON
   69                        | READ_DATA_FUNC_CALL LEFT_PARANTHESIS INT_LITERAL RIGHT_PARANTHESIS SEMI_COLON
   70                        | READ_DATA_FUNC_CALL LEFT_PARANTHESIS IDENTIFIER RIGHT_PARANTHESIS SEMI_COLON
   71                        | GET_TIMESTAMP_FUNC_CALL LEFT_PARANTHESIS INT_LITERAL RIGHT_PARANTHESIS SEMI_COLON
   72                        | CONNECT_URL_FUNC_CALL LEFT_PARANTHESIS STRING_LITERAL RIGHT_PARANTHESIS SEMI_COLON
   73                        | SEND_INT_TO_CONNECTION_FUNC_CALL LEFT_PARANTHESIS STRING_LITERAL COMMA IDENTIFIER RIGHT_PARANTHESIS SEMI_COLON
   74                        | SEND_INT_TO_CONNECTION_FUNC_CALL LEFT_PARANTHESIS STRING_LITERAL COMMA INT_LITERAL RIGHT_PARANTHESIS SEMI_COLON
   75                        | RECEIVE_INT_FROM_CONNECTION_FUNC_CALL LEFT_PARANTHESIS STRING_LITERAL RIGHT_PARANTHESIS SEMI_COLON
   76                        | SET_SWITCH_FUNC_CALL LEFT_PARANTHESIS BOOL_LITERAL COMMA INT_LITERAL RIGHT_PARANTHESIS SEMI_COLON
   77                        | SET_SWITCH_FUNC_CALL LEFT_PARANTHESIS IDENTIFIER COMMA INT_LITERAL RIGHT_PARANTHESIS SEMI_COLON
   78                        | SET_SWITCH_FUNC_CALL LEFT_PARANTHESIS BOOL_LITERAL COMMA IDENTIFIER RIGHT_PARANTHESIS SEMI_COLON
   79                        | SET_SWITCH_FUNC_CALL LEFT_PARANTHESIS IDENTIFIER COMMA IDENTIFIER RIGHT_PARANTHESIS SEMI_COLON

   80 loop: do_while
   81     | while_loop
   82     | for_loop

   83 do_while: DO LEFT_CURLY_BRACKET block_stmt RIGHT_CURLY_BRACKET WHILE LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS SEMI_COLON
   84         | DO LEFT_CURLY_BRACKET block_stmt RIGHT_CURLY_BRACKET WHILE LEFT_PARANTHESIS NOT_OP LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS RIGHT_PARANTHESIS SEMI_COLON

   85 while_loop: WHILE LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS LEFT_CURLY_BRACKET block_stmt RIGHT_CURLY_BRACKET
   86           | WHILE LEFT_PARANTHESIS NOT_OP LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS RIGHT_PARANTHESIS LEFT_CURLY_BRACKET block_stmt RIGHT_CURLY_BRACKET

   87 for_loop: FOR LEFT_PARANTHESIS assign_stmt SEMI_COLON condition_list SEMI_COLON for_update RIGHT_PARANTHESIS LEFT_CURLY_BRACKET block_stmt RIGHT_CURLY_BRACKET
   88         | FOR LEFT_PARANTHESIS assign_stmt SEMI_COLON NOT_OP LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS SEMI_COLON for_update RIGHT_PARANTHESIS LEFT_CURLY_BRACKET block_stmt RIGHT_CURLY_BRACKET

   89 for_update: assign_stmt
   90           | func_call

   91 condition_list: and_term
   92               | condition_list LOGICAL_OR_OP and_term
   93               | NOT_OP LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS LOGICAL_OR_OP and_term
   94               | NOT_OP LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS LOGICAL_OR_OP LEFT_PARANTHESIS NOT_OP LEFT_PARANTHESIS and_term RIGHT_PARANTHESIS RIGHT_PARANTHESIS
   95               | condition_list LOGICAL_OR_OP LEFT_PARANTHESIS NOT_OP LEFT_PARANTHESIS and_term RIGHT_PARANTHESIS RIGHT_PARANTHESIS

   96 and_term: condition
   97         | LEFT_PARANTHESIS condition RIGHT_PARANTHESIS
   98         | and_term LOGICAL_AND_OP condition
   99         | IDENTIFIER

  100 condition: BOOL_LITERAL
  101          | IDENTIFIER LESS_THAN_OP IDENTIFIER
  102          | IDENTIFIER GREATER_THAN_OP IDENTIFIER
  103          | IDENTIFIER LESS_THAN_OR_EQUAL_OP IDENTIFIER
  104          | IDENTIFIER GREATER_THAN_OR_EQUAL_OP IDENTIFIER
  105          | IDENTIFIER EQUALITY_OP IDENTIFIER
  106          | IDENTIFIER NOT_EQUAL_OP IDENTIFIER
  107          | numeric_const LESS_THAN_OP IDENTIFIER
  108          | numeric_const GREATER_THAN_OP IDENTIFIER
  109          | numeric_const LESS_THAN_OR_EQUAL_OP IDENTIFIER
  110          | numeric_const GREATER_THAN_OR_EQUAL_OP IDENTIFIER
  111          | numeric_const EQUALITY_OP IDENTIFIER
  112          | numeric_const NOT_EQUAL_OP IDENTIFIER
  113          | numeric_const LESS_THAN_OP numeric_const
  114          | numeric_const GREATER_THAN_OP numeric_const
  115          | numeric_const LESS_THAN_OR_EQUAL_OP numeric_const
  116          | numeric_const GREATER_THAN_OR_EQUAL_OP numeric_const
  117          | numeric_const EQUALITY_OP numeric_const
  118          | numeric_const NOT_EQUAL_OP numeric_const


Terminals, with rules where they appear

    $end (0) 0
    '\n' (10) 1
    error (256) 10
    COMMENT (258) 7
    INT_LITERAL (259) 53 69 71 74 76 77
    FLOAT_LITERAL (260) 54
    BOOL_LITERAL (261) 55 76 78 100
    CHAR_LITERAL (262) 57
    STRING_LITERAL (263) 56 72 73 74 75
    ADDITION_OP (264) 58
    SUBTRACTION_OP (265) 59
    MULTIPLICATION_OP (266) 61
    DIVISION_OP (267) 62
    LESS_THAN_OP (268) 101 107 113
    GREATER_THAN_OP (269) 102 108 114
    LESS_THAN_OR_EQUAL_OP (270) 103 109 115
    GREATER_THAN_OR_EQUAL_OP (271) 104 110 116
    EQUALITY_OP (272) 105 111 117
    ASSIGNMENT_OP (273) 29 31
    SEMI_COLON (274) 27 28 29 30 31 39 40 46 47 48 49 50 67 68 69 70 71 72 73 74 75 76 77 78 79 83 84 87 88
    COMMA (275) 17 33 43 45 73 74 76 77 78 79
    DOT (276) 40
    NOT_OP (277) 84 86 88 93 94 95
    NOT_EQUAL_OP (278) 106 112 118
    LOGICAL_AND_OP (279) 98
    LOGICAL_OR_OP (280) 92 93 94 95
    INCREMENT_OP (281) 27
    DECREMENT_OP (282) 28
    DO (283) 83 84
    FOR (284) 87 88
    WHILE (285) 83 84 85 86
    BREAK (286) 49
    CONTINUE (287) 50
    RETURN (288) 46 47 48
    READ_DATA_FUNC_CALL (289) 69 70
    GET_TIMESTAMP_FUNC_CALL (290) 71
    DISPLAY_FUNC_CALL (291) 67 68
    CONNECT_URL_FUNC_CALL (292) 72
    SEND_INT_TO_CONNECTION_FUNC_CALL (293) 73 74
    RECEIVE_INT_FROM_CONNECTION_FUNC_CALL (294) 75
    SET_SWITCH_FUNC_CALL (295) 76 77 78 79
    FUNCTION_DEF (296) 11
    IF (297) 12 14 15
    ELSE (298) 12 15
    LEFT_PARANTHESIS (299) 11 12 14 15 39 66 67 68 69 70 71 72 73 74 75 76 77 78 79 83 84 85 86 87 88 93 94 95 97
    RIGHT_PARANTHESIS (300) 11 12 14 15 39 66 67 68 69 70 71 72 73 74 75 76 77 78 79 83 84 85 86 87 88 93 94 95 97
    LEFT_CURLY_BRACKET (301) 11 83 84 85 86 87 88
    RIGHT_CURLY_BRACKET (302) 11 83 84 85 86 87 88
    TYPE_ID (303) 16 17 30 31 37
    IDENTIFIER (304) 11 16 17 27 28 29 32 33 39 40 41 43 47 65 70 73 77 78 79 99 101 102 103 104 105 106 107 108 109 110 111 112
    NEWLINE (305) 10
    VOID_TYPE (306) 38


Nonterminals, with rules where they appear

    $accept (53)
        on left: 0
    start (54)
        on left: 1
        on right: 0
    program (55)
        on left: 2
        on right: 1
    stmt_list (56)
        on left: 3 4
        on right: 2 4
    block_stmt (57)
        on left: 5 6 7
        on right: 3 6 7 11 83 84 85 86 87 88
    stmt (58)
        on left: 8 9 10
        on right: 5 6 14
    func_def (59)
        on left: 11
        on right: 4
    matched (60)
        on left: 12 13
        on right: 8 12 15
    unmatched (61)
        on left: 14 15
        on right: 9 15
    argument_list (62)
        on left: 16 17 18
        on right: 11 17
    unconditional_stmt (63)
        on left: 19 20 21 22 23 24 25 26
        on right: 13
    increment_stmt (64)
        on left: 27
        on right: 25
    decrement_stmt (65)
        on left: 28
        on right: 26
    assign_stmt (66)
        on left: 29
        on right: 19 87 88 89
    declaration_stmt (67)
        on left: 30 31
        on right: 20
    identifier_list (68)
        on left: 32 33
        on right: 30 31 33
    expression (69)
        on left: 34 35 36
        on right: 29 31 67
    type_def (70)
        on left: 37 38
        on right: 11
    func_call (71)
        on left: 39 40
        on right: 21 36 90
    arguments (72)
        on left: 41 42 43 44 45
        on right: 39 43 45
    reserved_stmt (73)
        on left: 46 47 48 49 50
        on right: 23
    const (74)
        on left: 51 52
        on right: 42 45 48
    numeric_const (75)
        on left: 53 54
        on right: 51 64 107 108 109 110 111 112 113 114 115 116 117 118
    non_numeric_const (76)
        on left: 55 56 57
        on right: 34 52
    arith_op (77)
        on left: 58 59 60
        on right: 35 58 59 66
    term (78)
        on left: 61 62 63
        on right: 58 59 60 61 62
    factor (79)
        on left: 64 65 66
        on right: 61 62 63
    primitive_function_call (80)
        on left: 67 68 69 70 71 72 73 74 75 76 77 78 79
        on right: 24
    loop (81)
        on left: 80 81 82
        on right: 22
    do_while (82)
        on left: 83 84
        on right: 80
    while_loop (83)
        on left: 85 86
        on right: 81
    for_loop (84)
        on left: 87 88
        on right: 82
    for_update (85)
        on left: 89 90
        on right: 87 88
    condition_list (86)
        on left: 91 92 93 94 95
        on right: 12 14 15 83 84 85 86 87 88 92 93 94 95
    and_term (87)
        on left: 96 97 98 99
        on right: 91 92 93 94 95 98
    condition (88)
        on left: 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118
        on right: 96 97 98


State 0

    0 $accept: . start $end

    error                                  shift, and go to state 1
    DO                                     shift, and go to state 2
    FOR                                    shift, and go to state 3
    WHILE                                  shift, and go to state 4
    BREAK                                  shift, and go to state 5
    CONTINUE                               shift, and go to state 6
    RETURN                                 shift, and go to state 7
    READ_DATA_FUNC_CALL                    shift, and go to state 8
    GET_TIMESTAMP_FUNC_CALL                shift, and go to state 9
    DISPLAY_FUNC_CALL                      shift, and go to state 10
    CONNECT_URL_FUNC_CALL                  shift, and go to state 11
    SEND_INT_TO_CONNECTION_FUNC_CALL       shift, and go to state 12
    RECEIVE_INT_FROM_CONNECTION_FUNC_CALL  shift, and go to state 13
    SET_SWITCH_FUNC_CALL                   shift, and go to state 14
    IF                                     shift, and go to state 15
    TYPE_ID                                shift, and go to state 16
    IDENTIFIER                             shift, and go to state 17

    start                    go to state 18
    program                  go to state 19
    stmt_list                go to state 20
    block_stmt               go to state 21
    stmt                     go to state 22
    matched                  go to state 23
    unmatched                go to state 24
    unconditional_stmt       go to state 25
    increment_stmt           go to state 26
    decrement_stmt           go to state 27
    assign_stmt              go to state 28
    declaration_stmt         go to state 29
    func_call                go to state 30
    reserved_stmt            go to state 31
    primitive_function_call  go to state 32
    loop                     go to state 33
    do_while                 go to state 34
    while_loop               go to state 35
    for_loop                 go to state 36


State 1

   10 stmt: error . NEWLINE

    NEWLINE  shift, and go to state 37


State 2

   83 do_while: DO . LEFT_CURLY_BRACKET block_stmt RIGHT_CURLY_BRACKET WHILE LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS SEMI_COLON
   84         | DO . LEFT_CURLY_BRACKET block_stmt RIGHT_CURLY_BRACKET WHILE LEFT_PARANTHESIS NOT_OP LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS RIGHT_PARANTHESIS SEMI_COLON

    LEFT_CURLY_BRACKET  shift, and go to state 38


State 3

   87 for_loop: FOR . LEFT_PARANTHESIS assign_stmt SEMI_COLON condition_list SEMI_COLON for_update RIGHT_PARANTHESIS LEFT_CURLY_BRACKET block_stmt RIGHT_CURLY_BRACKET
   88         | FOR . LEFT_PARANTHESIS assign_stmt SEMI_COLON NOT_OP LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS SEMI_COLON for_update RIGHT_PARANTHESIS LEFT_CURLY_BRACKET block_stmt RIGHT_CURLY_BRACKET

    LEFT_PARANTHESIS  shift, and go to state 39


State 4

   85 while_loop: WHILE . LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS LEFT_CURLY_BRACKET block_stmt RIGHT_CURLY_BRACKET
   86           | WHILE . LEFT_PARANTHESIS NOT_OP LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS RIGHT_PARANTHESIS LEFT_CURLY_BRACKET block_stmt RIGHT_CURLY_BRACKET

    LEFT_PARANTHESIS  shift, and go to state 40


State 5

   49 reserved_stmt: BREAK . SEMI_COLON

    SEMI_COLON  shift, and go to state 41


State 6

   50 reserved_stmt: CONTINUE . SEMI_COLON

    SEMI_COLON  shift, and go to state 42


State 7

   46 reserved_stmt: RETURN . SEMI_COLON
   47              | RETURN . IDENTIFIER SEMI_COLON
   48              | RETURN . const SEMI_COLON

    INT_LITERAL     shift, and go to state 43
    FLOAT_LITERAL   shift, and go to state 44
    BOOL_LITERAL    shift, and go to state 45
    CHAR_LITERAL    shift, and go to state 46
    STRING_LITERAL  shift, and go to state 47
    SEMI_COLON      shift, and go to state 48
    IDENTIFIER      shift, and go to state 49

    const              go to state 50
    numeric_const      go to state 51
    non_numeric_const  go to state 52


State 8

   69 primitive_function_call: READ_DATA_FUNC_CALL . LEFT_PARANTHESIS INT_LITERAL RIGHT_PARANTHESIS SEMI_COLON
   70                        | READ_DATA_FUNC_CALL . LEFT_PARANTHESIS IDENTIFIER RIGHT_PARANTHESIS SEMI_COLON

    LEFT_PARANTHESIS  shift, and go to state 53


State 9

   71 primitive_function_call: GET_TIMESTAMP_FUNC_CALL . LEFT_PARANTHESIS INT_LITERAL RIGHT_PARANTHESIS SEMI_COLON

    LEFT_PARANTHESIS  shift, and go to state 54


State 10

   67 primitive_function_call: DISPLAY_FUNC_CALL . LEFT_PARANTHESIS expression RIGHT_PARANTHESIS SEMI_COLON
   68                        | DISPLAY_FUNC_CALL . LEFT_PARANTHESIS RIGHT_PARANTHESIS SEMI_COLON

    LEFT_PARANTHESIS  shift, and go to state 55


State 11

   72 primitive_function_call: CONNECT_URL_FUNC_CALL . LEFT_PARANTHESIS STRING_LITERAL RIGHT_PARANTHESIS SEMI_COLON

    LEFT_PARANTHESIS  shift, and go to state 56


State 12

   73 primitive_function_call: SEND_INT_TO_CONNECTION_FUNC_CALL . LEFT_PARANTHESIS STRING_LITERAL COMMA IDENTIFIER RIGHT_PARANTHESIS SEMI_COLON
   74                        | SEND_INT_TO_CONNECTION_FUNC_CALL . LEFT_PARANTHESIS STRING_LITERAL COMMA INT_LITERAL RIGHT_PARANTHESIS SEMI_COLON

    LEFT_PARANTHESIS  shift, and go to state 57


State 13

   75 primitive_function_call: RECEIVE_INT_FROM_CONNECTION_FUNC_CALL . LEFT_PARANTHESIS STRING_LITERAL RIGHT_PARANTHESIS SEMI_COLON

    LEFT_PARANTHESIS  shift, and go to state 58


State 14

   76 primitive_function_call: SET_SWITCH_FUNC_CALL . LEFT_PARANTHESIS BOOL_LITERAL COMMA INT_LITERAL RIGHT_PARANTHESIS SEMI_COLON
   77                        | SET_SWITCH_FUNC_CALL . LEFT_PARANTHESIS IDENTIFIER COMMA INT_LITERAL RIGHT_PARANTHESIS SEMI_COLON
   78                        | SET_SWITCH_FUNC_CALL . LEFT_PARANTHESIS BOOL_LITERAL COMMA IDENTIFIER RIGHT_PARANTHESIS SEMI_COLON
   79                        | SET_SWITCH_FUNC_CALL . LEFT_PARANTHESIS IDENTIFIER COMMA IDENTIFIER RIGHT_PARANTHESIS SEMI_COLON

    LEFT_PARANTHESIS  shift, and go to state 59


State 15

   12 matched: IF . LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS matched ELSE matched
   14 unmatched: IF . LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS stmt
   15          | IF . LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS matched ELSE unmatched

    LEFT_PARANTHESIS  shift, and go to state 60


State 16

   30 declaration_stmt: TYPE_ID . identifier_list SEMI_COLON
   31                 | TYPE_ID . identifier_list ASSIGNMENT_OP expression SEMI_COLON

    IDENTIFIER  shift, and go to state 61

    identifier_list  go to state 62


State 17

   27 increment_stmt: IDENTIFIER . INCREMENT_OP SEMI_COLON
   28 decrement_stmt: IDENTIFIER . DECREMENT_OP SEMI_COLON
   29 assign_stmt: IDENTIFIER . ASSIGNMENT_OP expression SEMI_COLON
   39 func_call: IDENTIFIER . LEFT_PARANTHESIS arguments RIGHT_PARANTHESIS SEMI_COLON
   40          | IDENTIFIER . DOT IDENTIFIER SEMI_COLON

    ASSIGNMENT_OP     shift, and go to state 63
    DOT               shift, and go to state 64
    INCREMENT_OP      shift, and go to state 65
    DECREMENT_OP      shift, and go to state 66
    LEFT_PARANTHESIS  shift, and go to state 67


State 18

    0 $accept: start . $end

    $end  shift, and go to state 68


State 19

    1 start: program . '\n'

    '\n'  shift, and go to state 69


State 20

    2 program: stmt_list .
    4 stmt_list: stmt_list . func_def

    FUNCTION_DEF  shift, and go to state 70

    $default  reduce using rule 2 (program)

    func_def  go to state 71


State 21

    3 stmt_list: block_stmt .
    6 block_stmt: block_stmt . stmt
    7           | block_stmt . COMMENT

    error                                  shift, and go to state 1
    COMMENT                                shift, and go to state 72
    DO                                     shift, and go to state 2
    FOR                                    shift, and go to state 3
    WHILE                                  shift, and go to state 4
    BREAK                                  shift, and go to state 5
    CONTINUE                               shift, and go to state 6
    RETURN                                 shift, and go to state 7
    READ_DATA_FUNC_CALL                    shift, and go to state 8
    GET_TIMESTAMP_FUNC_CALL                shift, and go to state 9
    DISPLAY_FUNC_CALL                      shift, and go to state 10
    CONNECT_URL_FUNC_CALL                  shift, and go to state 11
    SEND_INT_TO_CONNECTION_FUNC_CALL       shift, and go to state 12
    RECEIVE_INT_FROM_CONNECTION_FUNC_CALL  shift, and go to state 13
    SET_SWITCH_FUNC_CALL                   shift, and go to state 14
    IF                                     shift, and go to state 15
    TYPE_ID                                shift, and go to state 16
    IDENTIFIER                             shift, and go to state 17

    FUNCTION_DEF  reduce using rule 3 (stmt_list)
    '\n'          reduce using rule 3 (stmt_list)

    stmt                     go to state 73
    matched                  go to state 23
    unmatched                go to state 24
    unconditional_stmt       go to state 25
    increment_stmt           go to state 26
    decrement_stmt           go to state 27
    assign_stmt              go to state 28
    declaration_stmt         go to state 29
    func_call                go to state 30
    reserved_stmt            go to state 31
    primitive_function_call  go to state 32
    loop                     go to state 33
    do_while                 go to state 34
    while_loop               go to state 35
    for_loop                 go to state 36


State 22

    5 block_stmt: stmt .

    $default  reduce using rule 5 (block_stmt)


State 23

    8 stmt: matched .

    $default  reduce using rule 8 (stmt)


State 24

    9 stmt: unmatched .

    $default  reduce using rule 9 (stmt)


State 25

   13 matched: unconditional_stmt .

    $default  reduce using rule 13 (matched)


State 26

   25 unconditional_stmt: increment_stmt .

    $default  reduce using rule 25 (unconditional_stmt)


State 27

   26 unconditional_stmt: decrement_stmt .

    $default  reduce using rule 26 (unconditional_stmt)


State 28

   19 unconditional_stmt: assign_stmt .

    $default  reduce using rule 19 (unconditional_stmt)


State 29

   20 unconditional_stmt: declaration_stmt .

    $default  reduce using rule 20 (unconditional_stmt)


State 30

   21 unconditional_stmt: func_call .

    $default  reduce using rule 21 (unconditional_stmt)


State 31

   23 unconditional_stmt: reserved_stmt .

    $default  reduce using rule 23 (unconditional_stmt)


State 32

   24 unconditional_stmt: primitive_function_call .

    $default  reduce using rule 24 (unconditional_stmt)


State 33

   22 unconditional_stmt: loop .

    $default  reduce using rule 22 (unconditional_stmt)


State 34

   80 loop: do_while .

    $default  reduce using rule 80 (loop)


State 35

   81 loop: while_loop .

    $default  reduce using rule 81 (loop)


State 36

   82 loop: for_loop .

    $default  reduce using rule 82 (loop)


State 37

   10 stmt: error NEWLINE .

    $default  reduce using rule 10 (stmt)


State 38

   83 do_while: DO LEFT_CURLY_BRACKET . block_stmt RIGHT_CURLY_BRACKET WHILE LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS SEMI_COLON
   84         | DO LEFT_CURLY_BRACKET . block_stmt RIGHT_CURLY_BRACKET WHILE LEFT_PARANTHESIS NOT_OP LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS RIGHT_PARANTHESIS SEMI_COLON

    error                                  shift, and go to state 1
    DO                                     shift, and go to state 2
    FOR                                    shift, and go to state 3
    WHILE                                  shift, and go to state 4
    BREAK                                  shift, and go to state 5
    CONTINUE                               shift, and go to state 6
    RETURN                                 shift, and go to state 7
    READ_DATA_FUNC_CALL                    shift, and go to state 8
    GET_TIMESTAMP_FUNC_CALL                shift, and go to state 9
    DISPLAY_FUNC_CALL                      shift, and go to state 10
    CONNECT_URL_FUNC_CALL                  shift, and go to state 11
    SEND_INT_TO_CONNECTION_FUNC_CALL       shift, and go to state 12
    RECEIVE_INT_FROM_CONNECTION_FUNC_CALL  shift, and go to state 13
    SET_SWITCH_FUNC_CALL                   shift, and go to state 14
    IF                                     shift, and go to state 15
    TYPE_ID                                shift, and go to state 16
    IDENTIFIER                             shift, and go to state 17

    block_stmt               go to state 74
    stmt                     go to state 22
    matched                  go to state 23
    unmatched                go to state 24
    unconditional_stmt       go to state 25
    increment_stmt           go to state 26
    decrement_stmt           go to state 27
    assign_stmt              go to state 28
    declaration_stmt         go to state 29
    func_call                go to state 30
    reserved_stmt            go to state 31
    primitive_function_call  go to state 32
    loop                     go to state 33
    do_while                 go to state 34
    while_loop               go to state 35
    for_loop                 go to state 36


State 39

   87 for_loop: FOR LEFT_PARANTHESIS . assign_stmt SEMI_COLON condition_list SEMI_COLON for_update RIGHT_PARANTHESIS LEFT_CURLY_BRACKET block_stmt RIGHT_CURLY_BRACKET
   88         | FOR LEFT_PARANTHESIS . assign_stmt SEMI_COLON NOT_OP LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS SEMI_COLON for_update RIGHT_PARANTHESIS LEFT_CURLY_BRACKET block_stmt RIGHT_CURLY_BRACKET

    IDENTIFIER  shift, and go to state 75

    assign_stmt  go to state 76


State 40

   85 while_loop: WHILE LEFT_PARANTHESIS . condition_list RIGHT_PARANTHESIS LEFT_CURLY_BRACKET block_stmt RIGHT_CURLY_BRACKET
   86           | WHILE LEFT_PARANTHESIS . NOT_OP LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS RIGHT_PARANTHESIS LEFT_CURLY_BRACKET block_stmt RIGHT_CURLY_BRACKET

    INT_LITERAL       shift, and go to state 43
    FLOAT_LITERAL     shift, and go to state 44
    BOOL_LITERAL      shift, and go to state 77
    NOT_OP            shift, and go to state 78
    LEFT_PARANTHESIS  shift, and go to state 79
    IDENTIFIER        shift, and go to state 80

    numeric_const   go to state 81
    condition_list  go to state 82
    and_term        go to state 83
    condition       go to state 84


State 41

   49 reserved_stmt: BREAK SEMI_COLON .

    $default  reduce using rule 49 (reserved_stmt)


State 42

   50 reserved_stmt: CONTINUE SEMI_COLON .

    $default  reduce using rule 50 (reserved_stmt)


State 43

   53 numeric_const: INT_LITERAL .

    $default  reduce using rule 53 (numeric_const)


State 44

   54 numeric_const: FLOAT_LITERAL .

    $default  reduce using rule 54 (numeric_const)


State 45

   55 non_numeric_const: BOOL_LITERAL .

    $default  reduce using rule 55 (non_numeric_const)


State 46

   57 non_numeric_const: CHAR_LITERAL .

    $default  reduce using rule 57 (non_numeric_const)


State 47

   56 non_numeric_const: STRING_LITERAL .

    $default  reduce using rule 56 (non_numeric_const)


State 48

   46 reserved_stmt: RETURN SEMI_COLON .

    $default  reduce using rule 46 (reserved_stmt)


State 49

   47 reserved_stmt: RETURN IDENTIFIER . SEMI_COLON

    SEMI_COLON  shift, and go to state 85


State 50

   48 reserved_stmt: RETURN const . SEMI_COLON

    SEMI_COLON  shift, and go to state 86


State 51

   51 const: numeric_const .

    $default  reduce using rule 51 (const)


State 52

   52 const: non_numeric_const .

    $default  reduce using rule 52 (const)


State 53

   69 primitive_function_call: READ_DATA_FUNC_CALL LEFT_PARANTHESIS . INT_LITERAL RIGHT_PARANTHESIS SEMI_COLON
   70                        | READ_DATA_FUNC_CALL LEFT_PARANTHESIS . IDENTIFIER RIGHT_PARANTHESIS SEMI_COLON

    INT_LITERAL  shift, and go to state 87
    IDENTIFIER   shift, and go to state 88


State 54

   71 primitive_function_call: GET_TIMESTAMP_FUNC_CALL LEFT_PARANTHESIS . INT_LITERAL RIGHT_PARANTHESIS SEMI_COLON

    INT_LITERAL  shift, and go to state 89


State 55

   67 primitive_function_call: DISPLAY_FUNC_CALL LEFT_PARANTHESIS . expression RIGHT_PARANTHESIS SEMI_COLON
   68                        | DISPLAY_FUNC_CALL LEFT_PARANTHESIS . RIGHT_PARANTHESIS SEMI_COLON

    INT_LITERAL        shift, and go to state 43
    FLOAT_LITERAL      shift, and go to state 44
    BOOL_LITERAL       shift, and go to state 45
    CHAR_LITERAL       shift, and go to state 46
    STRING_LITERAL     shift, and go to state 47
    LEFT_PARANTHESIS   shift, and go to state 90
    RIGHT_PARANTHESIS  shift, and go to state 91
    IDENTIFIER         shift, and go to state 92

    expression         go to state 93
    func_call          go to state 94
    numeric_const      go to state 95
    non_numeric_const  go to state 96
    arith_op           go to state 97
    term               go to state 98
    factor             go to state 99


State 56

   72 primitive_function_call: CONNECT_URL_FUNC_CALL LEFT_PARANTHESIS . STRING_LITERAL RIGHT_PARANTHESIS SEMI_COLON

    STRING_LITERAL  shift, and go to state 100


State 57

   73 primitive_function_call: SEND_INT_TO_CONNECTION_FUNC_CALL LEFT_PARANTHESIS . STRING_LITERAL COMMA IDENTIFIER RIGHT_PARANTHESIS SEMI_COLON
   74                        | SEND_INT_TO_CONNECTION_FUNC_CALL LEFT_PARANTHESIS . STRING_LITERAL COMMA INT_LITERAL RIGHT_PARANTHESIS SEMI_COLON

    STRING_LITERAL  shift, and go to state 101


State 58

   75 primitive_function_call: RECEIVE_INT_FROM_CONNECTION_FUNC_CALL LEFT_PARANTHESIS . STRING_LITERAL RIGHT_PARANTHESIS SEMI_COLON

    STRING_LITERAL  shift, and go to state 102


State 59

   76 primitive_function_call: SET_SWITCH_FUNC_CALL LEFT_PARANTHESIS . BOOL_LITERAL COMMA INT_LITERAL RIGHT_PARANTHESIS SEMI_COLON
   77                        | SET_SWITCH_FUNC_CALL LEFT_PARANTHESIS . IDENTIFIER COMMA INT_LITERAL RIGHT_PARANTHESIS SEMI_COLON
   78                        | SET_SWITCH_FUNC_CALL LEFT_PARANTHESIS . BOOL_LITERAL COMMA IDENTIFIER RIGHT_PARANTHESIS SEMI_COLON
   79                        | SET_SWITCH_FUNC_CALL LEFT_PARANTHESIS . IDENTIFIER COMMA IDENTIFIER RIGHT_PARANTHESIS SEMI_COLON

    BOOL_LITERAL  shift, and go to state 103
    IDENTIFIER    shift, and go to state 104


State 60

   12 matched: IF LEFT_PARANTHESIS . condition_list RIGHT_PARANTHESIS matched ELSE matched
   14 unmatched: IF LEFT_PARANTHESIS . condition_list RIGHT_PARANTHESIS stmt
   15          | IF LEFT_PARANTHESIS . condition_list RIGHT_PARANTHESIS matched ELSE unmatched

    INT_LITERAL       shift, and go to state 43
    FLOAT_LITERAL     shift, and go to state 44
    BOOL_LITERAL      shift, and go to state 77
    NOT_OP            shift, and go to state 105
    LEFT_PARANTHESIS  shift, and go to state 79
    IDENTIFIER        shift, and go to state 80

    numeric_const   go to state 81
    condition_list  go to state 106
    and_term        go to state 83
    condition       go to state 84


State 61

   32 identifier_list: IDENTIFIER .
   33                | IDENTIFIER . COMMA identifier_list

    COMMA  shift, and go to state 107

    $default  reduce using rule 32 (identifier_list)


State 62

   30 declaration_stmt: TYPE_ID identifier_list . SEMI_COLON
   31                 | TYPE_ID identifier_list . ASSIGNMENT_OP expression SEMI_COLON

    ASSIGNMENT_OP  shift, and go to state 108
    SEMI_COLON     shift, and go to state 109


State 63

   29 assign_stmt: IDENTIFIER ASSIGNMENT_OP . expression SEMI_COLON

    INT_LITERAL       shift, and go to state 43
    FLOAT_LITERAL     shift, and go to state 44
    BOOL_LITERAL      shift, and go to state 45
    CHAR_LITERAL      shift, and go to state 46
    STRING_LITERAL    shift, and go to state 47
    LEFT_PARANTHESIS  shift, and go to state 90
    IDENTIFIER        shift, and go to state 92

    expression         go to state 110
    func_call          go to state 94
    numeric_const      go to state 95
    non_numeric_const  go to state 96
    arith_op           go to state 97
    term               go to state 98
    factor             go to state 99


State 64

   40 func_call: IDENTIFIER DOT . IDENTIFIER SEMI_COLON

    IDENTIFIER  shift, and go to state 111


State 65

   27 increment_stmt: IDENTIFIER INCREMENT_OP . SEMI_COLON

    SEMI_COLON  shift, and go to state 112


State 66

   28 decrement_stmt: IDENTIFIER DECREMENT_OP . SEMI_COLON

    SEMI_COLON  shift, and go to state 113


State 67

   39 func_call: IDENTIFIER LEFT_PARANTHESIS . arguments RIGHT_PARANTHESIS SEMI_COLON

    INT_LITERAL     shift, and go to state 43
    FLOAT_LITERAL   shift, and go to state 44
    BOOL_LITERAL    shift, and go to state 45
    CHAR_LITERAL    shift, and go to state 46
    STRING_LITERAL  shift, and go to state 47
    IDENTIFIER      shift, and go to state 114

    $default  reduce using rule 44 (arguments)

    arguments          go to state 115
    const              go to state 116
    numeric_const      go to state 51
    non_numeric_const  go to state 52


State 68

    0 $accept: start $end .

    $default  accept


State 69

    1 start: program '\n' .

    $default  reduce using rule 1 (start)


State 70

   11 func_def: FUNCTION_DEF . type_def IDENTIFIER LEFT_PARANTHESIS argument_list RIGHT_PARANTHESIS LEFT_CURLY_BRACKET block_stmt RIGHT_CURLY_BRACKET

    TYPE_ID    shift, and go to state 117
    VOID_TYPE  shift, and go to state 118

    type_def  go to state 119


State 71

    4 stmt_list: stmt_list func_def .

    $default  reduce using rule 4 (stmt_list)


State 72

    7 block_stmt: block_stmt COMMENT .

    $default  reduce using rule 7 (block_stmt)


State 73

    6 block_stmt: block_stmt stmt .

    $default  reduce using rule 6 (block_stmt)


State 74

    6 block_stmt: block_stmt . stmt
    7           | block_stmt . COMMENT
   83 do_while: DO LEFT_CURLY_BRACKET block_stmt . RIGHT_CURLY_BRACKET WHILE LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS SEMI_COLON
   84         | DO LEFT_CURLY_BRACKET block_stmt . RIGHT_CURLY_BRACKET WHILE LEFT_PARANTHESIS NOT_OP LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS RIGHT_PARANTHESIS SEMI_COLON

    error                                  shift, and go to state 1
    COMMENT                                shift, and go to state 72
    DO                                     shift, and go to state 2
    FOR                                    shift, and go to state 3
    WHILE                                  shift, and go to state 4
    BREAK                                  shift, and go to state 5
    CONTINUE                               shift, and go to state 6
    RETURN                                 shift, and go to state 7
    READ_DATA_FUNC_CALL                    shift, and go to state 8
    GET_TIMESTAMP_FUNC_CALL                shift, and go to state 9
    DISPLAY_FUNC_CALL                      shift, and go to state 10
    CONNECT_URL_FUNC_CALL                  shift, and go to state 11
    SEND_INT_TO_CONNECTION_FUNC_CALL       shift, and go to state 12
    RECEIVE_INT_FROM_CONNECTION_FUNC_CALL  shift, and go to state 13
    SET_SWITCH_FUNC_CALL                   shift, and go to state 14
    IF                                     shift, and go to state 15
    RIGHT_CURLY_BRACKET                    shift, and go to state 120
    TYPE_ID                                shift, and go to state 16
    IDENTIFIER                             shift, and go to state 17

    stmt                     go to state 73
    matched                  go to state 23
    unmatched                go to state 24
    unconditional_stmt       go to state 25
    increment_stmt           go to state 26
    decrement_stmt           go to state 27
    assign_stmt              go to state 28
    declaration_stmt         go to state 29
    func_call                go to state 30
    reserved_stmt            go to state 31
    primitive_function_call  go to state 32
    loop                     go to state 33
    do_while                 go to state 34
    while_loop               go to state 35
    for_loop                 go to state 36


State 75

   29 assign_stmt: IDENTIFIER . ASSIGNMENT_OP expression SEMI_COLON

    ASSIGNMENT_OP  shift, and go to state 63


State 76

   87 for_loop: FOR LEFT_PARANTHESIS assign_stmt . SEMI_COLON condition_list SEMI_COLON for_update RIGHT_PARANTHESIS LEFT_CURLY_BRACKET block_stmt RIGHT_CURLY_BRACKET
   88         | FOR LEFT_PARANTHESIS assign_stmt . SEMI_COLON NOT_OP LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS SEMI_COLON for_update RIGHT_PARANTHESIS LEFT_CURLY_BRACKET block_stmt RIGHT_CURLY_BRACKET

    SEMI_COLON  shift, and go to state 121


State 77

  100 condition: BOOL_LITERAL .

    $default  reduce using rule 100 (condition)


State 78

   86 while_loop: WHILE LEFT_PARANTHESIS NOT_OP . LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS RIGHT_PARANTHESIS LEFT_CURLY_BRACKET block_stmt RIGHT_CURLY_BRACKET
   93 condition_list: NOT_OP . LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS LOGICAL_OR_OP and_term
   94               | NOT_OP . LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS LOGICAL_OR_OP LEFT_PARANTHESIS NOT_OP LEFT_PARANTHESIS and_term RIGHT_PARANTHESIS RIGHT_PARANTHESIS

    LEFT_PARANTHESIS  shift, and go to state 122


State 79

   97 and_term: LEFT_PARANTHESIS . condition RIGHT_PARANTHESIS

    INT_LITERAL    shift, and go to state 43
    FLOAT_LITERAL  shift, and go to state 44
    BOOL_LITERAL   shift, and go to state 77
    IDENTIFIER     shift, and go to state 123

    numeric_const  go to state 81
    condition      go to state 124


State 80

   99 and_term: IDENTIFIER .
  101 condition: IDENTIFIER . LESS_THAN_OP IDENTIFIER
  102          | IDENTIFIER . GREATER_THAN_OP IDENTIFIER
  103          | IDENTIFIER . LESS_THAN_OR_EQUAL_OP IDENTIFIER
  104          | IDENTIFIER . GREATER_THAN_OR_EQUAL_OP IDENTIFIER
  105          | IDENTIFIER . EQUALITY_OP IDENTIFIER
  106          | IDENTIFIER . NOT_EQUAL_OP IDENTIFIER

    LESS_THAN_OP              shift, and go to state 125
    GREATER_THAN_OP           shift, and go to state 126
    LESS_THAN_OR_EQUAL_OP     shift, and go to state 127
    GREATER_THAN_OR_EQUAL_OP  shift, and go to state 128
    EQUALITY_OP               shift, and go to state 129
    NOT_EQUAL_OP              shift, and go to state 130

    $default  reduce using rule 99 (and_term)


State 81

  107 condition: numeric_const . LESS_THAN_OP IDENTIFIER
  108          | numeric_const . GREATER_THAN_OP IDENTIFIER
  109          | numeric_const . LESS_THAN_OR_EQUAL_OP IDENTIFIER
  110          | numeric_const . GREATER_THAN_OR_EQUAL_OP IDENTIFIER
  111          | numeric_const . EQUALITY_OP IDENTIFIER
  112          | numeric_const . NOT_EQUAL_OP IDENTIFIER
  113          | numeric_const . LESS_THAN_OP numeric_const
  114          | numeric_const . GREATER_THAN_OP numeric_const
  115          | numeric_const . LESS_THAN_OR_EQUAL_OP numeric_const
  116          | numeric_const . GREATER_THAN_OR_EQUAL_OP numeric_const
  117          | numeric_const . EQUALITY_OP numeric_const
  118          | numeric_const . NOT_EQUAL_OP numeric_const

    LESS_THAN_OP              shift, and go to state 131
    GREATER_THAN_OP           shift, and go to state 132
    LESS_THAN_OR_EQUAL_OP     shift, and go to state 133
    GREATER_THAN_OR_EQUAL_OP  shift, and go to state 134
    EQUALITY_OP               shift, and go to state 135
    NOT_EQUAL_OP              shift, and go to state 136


State 82

   85 while_loop: WHILE LEFT_PARANTHESIS condition_list . RIGHT_PARANTHESIS LEFT_CURLY_BRACKET block_stmt RIGHT_CURLY_BRACKET
   92 condition_list: condition_list . LOGICAL_OR_OP and_term
   95               | condition_list . LOGICAL_OR_OP LEFT_PARANTHESIS NOT_OP LEFT_PARANTHESIS and_term RIGHT_PARANTHESIS RIGHT_PARANTHESIS

    LOGICAL_OR_OP      shift, and go to state 137
    RIGHT_PARANTHESIS  shift, and go to state 138


State 83

   91 condition_list: and_term .
   98 and_term: and_term . LOGICAL_AND_OP condition

    LOGICAL_AND_OP  shift, and go to state 139

    $default  reduce using rule 91 (condition_list)


State 84

   96 and_term: condition .

    $default  reduce using rule 96 (and_term)


State 85

   47 reserved_stmt: RETURN IDENTIFIER SEMI_COLON .

    $default  reduce using rule 47 (reserved_stmt)


State 86

   48 reserved_stmt: RETURN const SEMI_COLON .

    $default  reduce using rule 48 (reserved_stmt)


State 87

   69 primitive_function_call: READ_DATA_FUNC_CALL LEFT_PARANTHESIS INT_LITERAL . RIGHT_PARANTHESIS SEMI_COLON

    RIGHT_PARANTHESIS  shift, and go to state 140


State 88

   70 primitive_function_call: READ_DATA_FUNC_CALL LEFT_PARANTHESIS IDENTIFIER . RIGHT_PARANTHESIS SEMI_COLON

    RIGHT_PARANTHESIS  shift, and go to state 141


State 89

   71 primitive_function_call: GET_TIMESTAMP_FUNC_CALL LEFT_PARANTHESIS INT_LITERAL . RIGHT_PARANTHESIS SEMI_COLON

    RIGHT_PARANTHESIS  shift, and go to state 142


State 90

   66 factor: LEFT_PARANTHESIS . arith_op RIGHT_PARANTHESIS

    INT_LITERAL       shift, and go to state 43
    FLOAT_LITERAL     shift, and go to state 44
    LEFT_PARANTHESIS  shift, and go to state 90
    IDENTIFIER        shift, and go to state 143

    numeric_const  go to state 95
    arith_op       go to state 144
    term           go to state 98
    factor         go to state 99


State 91

   68 primitive_function_call: DISPLAY_FUNC_CALL LEFT_PARANTHESIS RIGHT_PARANTHESIS . SEMI_COLON

    SEMI_COLON  shift, and go to state 145


State 92

   39 func_call: IDENTIFIER . LEFT_PARANTHESIS arguments RIGHT_PARANTHESIS SEMI_COLON
   40          | IDENTIFIER . DOT IDENTIFIER SEMI_COLON
   65 factor: IDENTIFIER .

    DOT               shift, and go to state 64
    LEFT_PARANTHESIS  shift, and go to state 67

    $default  reduce using rule 65 (factor)


State 93

   67 primitive_function_call: DISPLAY_FUNC_CALL LEFT_PARANTHESIS expression . RIGHT_PARANTHESIS SEMI_COLON

    RIGHT_PARANTHESIS  shift, and go to state 146


State 94

   36 expression: func_call .

    $default  reduce using rule 36 (expression)


State 95

   64 factor: numeric_const .

    $default  reduce using rule 64 (factor)


State 96

   34 expression: non_numeric_const .

    $default  reduce using rule 34 (expression)


State 97

   35 expression: arith_op .
   58 arith_op: arith_op . ADDITION_OP term
   59         | arith_op . SUBTRACTION_OP term

    ADDITION_OP     shift, and go to state 147
    SUBTRACTION_OP  shift, and go to state 148

    $default  reduce using rule 35 (expression)


State 98

   60 arith_op: term .
   61 term: term . MULTIPLICATION_OP factor
   62     | term . DIVISION_OP factor

    MULTIPLICATION_OP  shift, and go to state 149
    DIVISION_OP        shift, and go to state 150

    $default  reduce using rule 60 (arith_op)


State 99

   63 term: factor .

    $default  reduce using rule 63 (term)


State 100

   72 primitive_function_call: CONNECT_URL_FUNC_CALL LEFT_PARANTHESIS STRING_LITERAL . RIGHT_PARANTHESIS SEMI_COLON

    RIGHT_PARANTHESIS  shift, and go to state 151


State 101

   73 primitive_function_call: SEND_INT_TO_CONNECTION_FUNC_CALL LEFT_PARANTHESIS STRING_LITERAL . COMMA IDENTIFIER RIGHT_PARANTHESIS SEMI_COLON
   74                        | SEND_INT_TO_CONNECTION_FUNC_CALL LEFT_PARANTHESIS STRING_LITERAL . COMMA INT_LITERAL RIGHT_PARANTHESIS SEMI_COLON

    COMMA  shift, and go to state 152


State 102

   75 primitive_function_call: RECEIVE_INT_FROM_CONNECTION_FUNC_CALL LEFT_PARANTHESIS STRING_LITERAL . RIGHT_PARANTHESIS SEMI_COLON

    RIGHT_PARANTHESIS  shift, and go to state 153


State 103

   76 primitive_function_call: SET_SWITCH_FUNC_CALL LEFT_PARANTHESIS BOOL_LITERAL . COMMA INT_LITERAL RIGHT_PARANTHESIS SEMI_COLON
   78                        | SET_SWITCH_FUNC_CALL LEFT_PARANTHESIS BOOL_LITERAL . COMMA IDENTIFIER RIGHT_PARANTHESIS SEMI_COLON

    COMMA  shift, and go to state 154


State 104

   77 primitive_function_call: SET_SWITCH_FUNC_CALL LEFT_PARANTHESIS IDENTIFIER . COMMA INT_LITERAL RIGHT_PARANTHESIS SEMI_COLON
   79                        | SET_SWITCH_FUNC_CALL LEFT_PARANTHESIS IDENTIFIER . COMMA IDENTIFIER RIGHT_PARANTHESIS SEMI_COLON

    COMMA  shift, and go to state 155


State 105

   93 condition_list: NOT_OP . LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS LOGICAL_OR_OP and_term
   94               | NOT_OP . LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS LOGICAL_OR_OP LEFT_PARANTHESIS NOT_OP LEFT_PARANTHESIS and_term RIGHT_PARANTHESIS RIGHT_PARANTHESIS

    LEFT_PARANTHESIS  shift, and go to state 156


State 106

   12 matched: IF LEFT_PARANTHESIS condition_list . RIGHT_PARANTHESIS matched ELSE matched
   14 unmatched: IF LEFT_PARANTHESIS condition_list . RIGHT_PARANTHESIS stmt
   15          | IF LEFT_PARANTHESIS condition_list . RIGHT_PARANTHESIS matched ELSE unmatched
   92 condition_list: condition_list . LOGICAL_OR_OP and_term
   95               | condition_list . LOGICAL_OR_OP LEFT_PARANTHESIS NOT_OP LEFT_PARANTHESIS and_term RIGHT_PARANTHESIS RIGHT_PARANTHESIS

    LOGICAL_OR_OP      shift, and go to state 137
    RIGHT_PARANTHESIS  shift, and go to state 157


State 107

   33 identifier_list: IDENTIFIER COMMA . identifier_list

    IDENTIFIER  shift, and go to state 61

    identifier_list  go to state 158


State 108

   31 declaration_stmt: TYPE_ID identifier_list ASSIGNMENT_OP . expression SEMI_COLON

    INT_LITERAL       shift, and go to state 43
    FLOAT_LITERAL     shift, and go to state 44
    BOOL_LITERAL      shift, and go to state 45
    CHAR_LITERAL      shift, and go to state 46
    STRING_LITERAL    shift, and go to state 47
    LEFT_PARANTHESIS  shift, and go to state 90
    IDENTIFIER        shift, and go to state 92

    expression         go to state 159
    func_call          go to state 94
    numeric_const      go to state 95
    non_numeric_const  go to state 96
    arith_op           go to state 97
    term               go to state 98
    factor             go to state 99


State 109

   30 declaration_stmt: TYPE_ID identifier_list SEMI_COLON .

    $default  reduce using rule 30 (declaration_stmt)


State 110

   29 assign_stmt: IDENTIFIER ASSIGNMENT_OP expression . SEMI_COLON

    SEMI_COLON  shift, and go to state 160


State 111

   40 func_call: IDENTIFIER DOT IDENTIFIER . SEMI_COLON

    SEMI_COLON  shift, and go to state 161


State 112

   27 increment_stmt: IDENTIFIER INCREMENT_OP SEMI_COLON .

    $default  reduce using rule 27 (increment_stmt)


State 113

   28 decrement_stmt: IDENTIFIER DECREMENT_OP SEMI_COLON .

    $default  reduce using rule 28 (decrement_stmt)


State 114

   41 arguments: IDENTIFIER .
   43          | IDENTIFIER . COMMA arguments

    COMMA  shift, and go to state 162

    $default  reduce using rule 41 (arguments)


State 115

   39 func_call: IDENTIFIER LEFT_PARANTHESIS arguments . RIGHT_PARANTHESIS SEMI_COLON

    RIGHT_PARANTHESIS  shift, and go to state 163


State 116

   42 arguments: const .
   45          | const . COMMA arguments

    COMMA  shift, and go to state 164

    $default  reduce using rule 42 (arguments)


State 117

   37 type_def: TYPE_ID .

    $default  reduce using rule 37 (type_def)


State 118

   38 type_def: VOID_TYPE .

    $default  reduce using rule 38 (type_def)


State 119

   11 func_def: FUNCTION_DEF type_def . IDENTIFIER LEFT_PARANTHESIS argument_list RIGHT_PARANTHESIS LEFT_CURLY_BRACKET block_stmt RIGHT_CURLY_BRACKET

    IDENTIFIER  shift, and go to state 165


State 120

   83 do_while: DO LEFT_CURLY_BRACKET block_stmt RIGHT_CURLY_BRACKET . WHILE LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS SEMI_COLON
   84         | DO LEFT_CURLY_BRACKET block_stmt RIGHT_CURLY_BRACKET . WHILE LEFT_PARANTHESIS NOT_OP LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS RIGHT_PARANTHESIS SEMI_COLON

    WHILE  shift, and go to state 166


State 121

   87 for_loop: FOR LEFT_PARANTHESIS assign_stmt SEMI_COLON . condition_list SEMI_COLON for_update RIGHT_PARANTHESIS LEFT_CURLY_BRACKET block_stmt RIGHT_CURLY_BRACKET
   88         | FOR LEFT_PARANTHESIS assign_stmt SEMI_COLON . NOT_OP LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS SEMI_COLON for_update RIGHT_PARANTHESIS LEFT_CURLY_BRACKET block_stmt RIGHT_CURLY_BRACKET

    INT_LITERAL       shift, and go to state 43
    FLOAT_LITERAL     shift, and go to state 44
    BOOL_LITERAL      shift, and go to state 77
    NOT_OP            shift, and go to state 167
    LEFT_PARANTHESIS  shift, and go to state 79
    IDENTIFIER        shift, and go to state 80

    numeric_const   go to state 81
    condition_list  go to state 168
    and_term        go to state 83
    condition       go to state 84


State 122

   86 while_loop: WHILE LEFT_PARANTHESIS NOT_OP LEFT_PARANTHESIS . condition_list RIGHT_PARANTHESIS RIGHT_PARANTHESIS LEFT_CURLY_BRACKET block_stmt RIGHT_CURLY_BRACKET
   93 condition_list: NOT_OP LEFT_PARANTHESIS . condition_list RIGHT_PARANTHESIS LOGICAL_OR_OP and_term
   94               | NOT_OP LEFT_PARANTHESIS . condition_list RIGHT_PARANTHESIS LOGICAL_OR_OP LEFT_PARANTHESIS NOT_OP LEFT_PARANTHESIS and_term RIGHT_PARANTHESIS RIGHT_PARANTHESIS

    INT_LITERAL       shift, and go to state 43
    FLOAT_LITERAL     shift, and go to state 44
    BOOL_LITERAL      shift, and go to state 77
    NOT_OP            shift, and go to state 105
    LEFT_PARANTHESIS  shift, and go to state 79
    IDENTIFIER        shift, and go to state 80

    numeric_const   go to state 81
    condition_list  go to state 169
    and_term        go to state 83
    condition       go to state 84


State 123

  101 condition: IDENTIFIER . LESS_THAN_OP IDENTIFIER
  102          | IDENTIFIER . GREATER_THAN_OP IDENTIFIER
  103          | IDENTIFIER . LESS_THAN_OR_EQUAL_OP IDENTIFIER
  104          | IDENTIFIER . GREATER_THAN_OR_EQUAL_OP IDENTIFIER
  105          | IDENTIFIER . EQUALITY_OP IDENTIFIER
  106          | IDENTIFIER . NOT_EQUAL_OP IDENTIFIER

    LESS_THAN_OP              shift, and go to state 125
    GREATER_THAN_OP           shift, and go to state 126
    LESS_THAN_OR_EQUAL_OP     shift, and go to state 127
    GREATER_THAN_OR_EQUAL_OP  shift, and go to state 128
    EQUALITY_OP               shift, and go to state 129
    NOT_EQUAL_OP              shift, and go to state 130


State 124

   97 and_term: LEFT_PARANTHESIS condition . RIGHT_PARANTHESIS

    RIGHT_PARANTHESIS  shift, and go to state 170


State 125

  101 condition: IDENTIFIER LESS_THAN_OP . IDENTIFIER

    IDENTIFIER  shift, and go to state 171


State 126

  102 condition: IDENTIFIER GREATER_THAN_OP . IDENTIFIER

    IDENTIFIER  shift, and go to state 172


State 127

  103 condition: IDENTIFIER LESS_THAN_OR_EQUAL_OP . IDENTIFIER

    IDENTIFIER  shift, and go to state 173


State 128

  104 condition: IDENTIFIER GREATER_THAN_OR_EQUAL_OP . IDENTIFIER

    IDENTIFIER  shift, and go to state 174


State 129

  105 condition: IDENTIFIER EQUALITY_OP . IDENTIFIER

    IDENTIFIER  shift, and go to state 175


State 130

  106 condition: IDENTIFIER NOT_EQUAL_OP . IDENTIFIER

    IDENTIFIER  shift, and go to state 176


State 131

  107 condition: numeric_const LESS_THAN_OP . IDENTIFIER
  113          | numeric_const LESS_THAN_OP . numeric_const

    INT_LITERAL    shift, and go to state 43
    FLOAT_LITERAL  shift, and go to state 44
    IDENTIFIER     shift, and go to state 177

    numeric_const  go to state 178


State 132

  108 condition: numeric_const GREATER_THAN_OP . IDENTIFIER
  114          | numeric_const GREATER_THAN_OP . numeric_const

    INT_LITERAL    shift, and go to state 43
    FLOAT_LITERAL  shift, and go to state 44
    IDENTIFIER     shift, and go to state 179

    numeric_const  go to state 180


State 133

  109 condition: numeric_const LESS_THAN_OR_EQUAL_OP . IDENTIFIER
  115          | numeric_const LESS_THAN_OR_EQUAL_OP . numeric_const

    INT_LITERAL    shift, and go to state 43
    FLOAT_LITERAL  shift, and go to state 44
    IDENTIFIER     shift, and go to state 181

    numeric_const  go to state 182


State 134

  110 condition: numeric_const GREATER_THAN_OR_EQUAL_OP . IDENTIFIER
  116          | numeric_const GREATER_THAN_OR_EQUAL_OP . numeric_const

    INT_LITERAL    shift, and go to state 43
    FLOAT_LITERAL  shift, and go to state 44
    IDENTIFIER     shift, and go to state 183

    numeric_const  go to state 184


State 135

  111 condition: numeric_const EQUALITY_OP . IDENTIFIER
  117          | numeric_const EQUALITY_OP . numeric_const

    INT_LITERAL    shift, and go to state 43
    FLOAT_LITERAL  shift, and go to state 44
    IDENTIFIER     shift, and go to state 185

    numeric_const  go to state 186


State 136

  112 condition: numeric_const NOT_EQUAL_OP . IDENTIFIER
  118          | numeric_const NOT_EQUAL_OP . numeric_const

    INT_LITERAL    shift, and go to state 43
    FLOAT_LITERAL  shift, and go to state 44
    IDENTIFIER     shift, and go to state 187

    numeric_const  go to state 188


State 137

   92 condition_list: condition_list LOGICAL_OR_OP . and_term
   95               | condition_list LOGICAL_OR_OP . LEFT_PARANTHESIS NOT_OP LEFT_PARANTHESIS and_term RIGHT_PARANTHESIS RIGHT_PARANTHESIS

    INT_LITERAL       shift, and go to state 43
    FLOAT_LITERAL     shift, and go to state 44
    BOOL_LITERAL      shift, and go to state 77
    LEFT_PARANTHESIS  shift, and go to state 189
    IDENTIFIER        shift, and go to state 80

    numeric_const  go to state 81
    and_term       go to state 190
    condition      go to state 84


State 138

   85 while_loop: WHILE LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS . LEFT_CURLY_BRACKET block_stmt RIGHT_CURLY_BRACKET

    LEFT_CURLY_BRACKET  shift, and go to state 191


State 139

   98 and_term: and_term LOGICAL_AND_OP . condition

    INT_LITERAL    shift, and go to state 43
    FLOAT_LITERAL  shift, and go to state 44
    BOOL_LITERAL   shift, and go to state 77
    IDENTIFIER     shift, and go to state 123

    numeric_const  go to state 81
    condition      go to state 192


State 140

   69 primitive_function_call: READ_DATA_FUNC_CALL LEFT_PARANTHESIS INT_LITERAL RIGHT_PARANTHESIS . SEMI_COLON

    SEMI_COLON  shift, and go to state 193


State 141

   70 primitive_function_call: READ_DATA_FUNC_CALL LEFT_PARANTHESIS IDENTIFIER RIGHT_PARANTHESIS . SEMI_COLON

    SEMI_COLON  shift, and go to state 194


State 142

   71 primitive_function_call: GET_TIMESTAMP_FUNC_CALL LEFT_PARANTHESIS INT_LITERAL RIGHT_PARANTHESIS . SEMI_COLON

    SEMI_COLON  shift, and go to state 195


State 143

   65 factor: IDENTIFIER .

    $default  reduce using rule 65 (factor)


State 144

   58 arith_op: arith_op . ADDITION_OP term
   59         | arith_op . SUBTRACTION_OP term
   66 factor: LEFT_PARANTHESIS arith_op . RIGHT_PARANTHESIS

    ADDITION_OP        shift, and go to state 147
    SUBTRACTION_OP     shift, and go to state 148
    RIGHT_PARANTHESIS  shift, and go to state 196


State 145

   68 primitive_function_call: DISPLAY_FUNC_CALL LEFT_PARANTHESIS RIGHT_PARANTHESIS SEMI_COLON .

    $default  reduce using rule 68 (primitive_function_call)


State 146

   67 primitive_function_call: DISPLAY_FUNC_CALL LEFT_PARANTHESIS expression RIGHT_PARANTHESIS . SEMI_COLON

    SEMI_COLON  shift, and go to state 197


State 147

   58 arith_op: arith_op ADDITION_OP . term

    INT_LITERAL       shift, and go to state 43
    FLOAT_LITERAL     shift, and go to state 44
    LEFT_PARANTHESIS  shift, and go to state 90
    IDENTIFIER        shift, and go to state 143

    numeric_const  go to state 95
    term           go to state 198
    factor         go to state 99


State 148

   59 arith_op: arith_op SUBTRACTION_OP . term

    INT_LITERAL       shift, and go to state 43
    FLOAT_LITERAL     shift, and go to state 44
    LEFT_PARANTHESIS  shift, and go to state 90
    IDENTIFIER        shift, and go to state 143

    numeric_const  go to state 95
    term           go to state 199
    factor         go to state 99


State 149

   61 term: term MULTIPLICATION_OP . factor

    INT_LITERAL       shift, and go to state 43
    FLOAT_LITERAL     shift, and go to state 44
    LEFT_PARANTHESIS  shift, and go to state 90
    IDENTIFIER        shift, and go to state 143

    numeric_const  go to state 95
    factor         go to state 200


State 150

   62 term: term DIVISION_OP . factor

    INT_LITERAL       shift, and go to state 43
    FLOAT_LITERAL     shift, and go to state 44
    LEFT_PARANTHESIS  shift, and go to state 90
    IDENTIFIER        shift, and go to state 143

    numeric_const  go to state 95
    factor         go to state 201


State 151

   72 primitive_function_call: CONNECT_URL_FUNC_CALL LEFT_PARANTHESIS STRING_LITERAL RIGHT_PARANTHESIS . SEMI_COLON

    SEMI_COLON  shift, and go to state 202


State 152

   73 primitive_function_call: SEND_INT_TO_CONNECTION_FUNC_CALL LEFT_PARANTHESIS STRING_LITERAL COMMA . IDENTIFIER RIGHT_PARANTHESIS SEMI_COLON
   74                        | SEND_INT_TO_CONNECTION_FUNC_CALL LEFT_PARANTHESIS STRING_LITERAL COMMA . INT_LITERAL RIGHT_PARANTHESIS SEMI_COLON

    INT_LITERAL  shift, and go to state 203
    IDENTIFIER   shift, and go to state 204


State 153

   75 primitive_function_call: RECEIVE_INT_FROM_CONNECTION_FUNC_CALL LEFT_PARANTHESIS STRING_LITERAL RIGHT_PARANTHESIS . SEMI_COLON

    SEMI_COLON  shift, and go to state 205


State 154

   76 primitive_function_call: SET_SWITCH_FUNC_CALL LEFT_PARANTHESIS BOOL_LITERAL COMMA . INT_LITERAL RIGHT_PARANTHESIS SEMI_COLON
   78                        | SET_SWITCH_FUNC_CALL LEFT_PARANTHESIS BOOL_LITERAL COMMA . IDENTIFIER RIGHT_PARANTHESIS SEMI_COLON

    INT_LITERAL  shift, and go to state 206
    IDENTIFIER   shift, and go to state 207


State 155

   77 primitive_function_call: SET_SWITCH_FUNC_CALL LEFT_PARANTHESIS IDENTIFIER COMMA . INT_LITERAL RIGHT_PARANTHESIS SEMI_COLON
   79                        | SET_SWITCH_FUNC_CALL LEFT_PARANTHESIS IDENTIFIER COMMA . IDENTIFIER RIGHT_PARANTHESIS SEMI_COLON

    INT_LITERAL  shift, and go to state 208
    IDENTIFIER   shift, and go to state 209


State 156

   93 condition_list: NOT_OP LEFT_PARANTHESIS . condition_list RIGHT_PARANTHESIS LOGICAL_OR_OP and_term
   94               | NOT_OP LEFT_PARANTHESIS . condition_list RIGHT_PARANTHESIS LOGICAL_OR_OP LEFT_PARANTHESIS NOT_OP LEFT_PARANTHESIS and_term RIGHT_PARANTHESIS RIGHT_PARANTHESIS

    INT_LITERAL       shift, and go to state 43
    FLOAT_LITERAL     shift, and go to state 44
    BOOL_LITERAL      shift, and go to state 77
    NOT_OP            shift, and go to state 105
    LEFT_PARANTHESIS  shift, and go to state 79
    IDENTIFIER        shift, and go to state 80

    numeric_const   go to state 81
    condition_list  go to state 210
    and_term        go to state 83
    condition       go to state 84


State 157

   12 matched: IF LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS . matched ELSE matched
   14 unmatched: IF LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS . stmt
   15          | IF LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS . matched ELSE unmatched

    error                                  shift, and go to state 1
    DO                                     shift, and go to state 2
    FOR                                    shift, and go to state 3
    WHILE                                  shift, and go to state 4
    BREAK                                  shift, and go to state 5
    CONTINUE                               shift, and go to state 6
    RETURN                                 shift, and go to state 7
    READ_DATA_FUNC_CALL                    shift, and go to state 8
    GET_TIMESTAMP_FUNC_CALL                shift, and go to state 9
    DISPLAY_FUNC_CALL                      shift, and go to state 10
    CONNECT_URL_FUNC_CALL                  shift, and go to state 11
    SEND_INT_TO_CONNECTION_FUNC_CALL       shift, and go to state 12
    RECEIVE_INT_FROM_CONNECTION_FUNC_CALL  shift, and go to state 13
    SET_SWITCH_FUNC_CALL                   shift, and go to state 14
    IF                                     shift, and go to state 15
    TYPE_ID                                shift, and go to state 16
    IDENTIFIER                             shift, and go to state 17

    stmt                     go to state 211
    matched                  go to state 212
    unmatched                go to state 24
    unconditional_stmt       go to state 25
    increment_stmt           go to state 26
    decrement_stmt           go to state 27
    assign_stmt              go to state 28
    declaration_stmt         go to state 29
    func_call                go to state 30
    reserved_stmt            go to state 31
    primitive_function_call  go to state 32
    loop                     go to state 33
    do_while                 go to state 34
    while_loop               go to state 35
    for_loop                 go to state 36


State 158

   33 identifier_list: IDENTIFIER COMMA identifier_list .

    $default  reduce using rule 33 (identifier_list)


State 159

   31 declaration_stmt: TYPE_ID identifier_list ASSIGNMENT_OP expression . SEMI_COLON

    SEMI_COLON  shift, and go to state 213


State 160

   29 assign_stmt: IDENTIFIER ASSIGNMENT_OP expression SEMI_COLON .

    $default  reduce using rule 29 (assign_stmt)


State 161

   40 func_call: IDENTIFIER DOT IDENTIFIER SEMI_COLON .

    $default  reduce using rule 40 (func_call)


State 162

   43 arguments: IDENTIFIER COMMA . arguments

    INT_LITERAL     shift, and go to state 43
    FLOAT_LITERAL   shift, and go to state 44
    BOOL_LITERAL    shift, and go to state 45
    CHAR_LITERAL    shift, and go to state 46
    STRING_LITERAL  shift, and go to state 47
    IDENTIFIER      shift, and go to state 114

    $default  reduce using rule 44 (arguments)

    arguments          go to state 214
    const              go to state 116
    numeric_const      go to state 51
    non_numeric_const  go to state 52


State 163

   39 func_call: IDENTIFIER LEFT_PARANTHESIS arguments RIGHT_PARANTHESIS . SEMI_COLON

    SEMI_COLON  shift, and go to state 215


State 164

   45 arguments: const COMMA . arguments

    INT_LITERAL     shift, and go to state 43
    FLOAT_LITERAL   shift, and go to state 44
    BOOL_LITERAL    shift, and go to state 45
    CHAR_LITERAL    shift, and go to state 46
    STRING_LITERAL  shift, and go to state 47
    IDENTIFIER      shift, and go to state 114

    $default  reduce using rule 44 (arguments)

    arguments          go to state 216
    const              go to state 116
    numeric_const      go to state 51
    non_numeric_const  go to state 52


State 165

   11 func_def: FUNCTION_DEF type_def IDENTIFIER . LEFT_PARANTHESIS argument_list RIGHT_PARANTHESIS LEFT_CURLY_BRACKET block_stmt RIGHT_CURLY_BRACKET

    LEFT_PARANTHESIS  shift, and go to state 217


State 166

   83 do_while: DO LEFT_CURLY_BRACKET block_stmt RIGHT_CURLY_BRACKET WHILE . LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS SEMI_COLON
   84         | DO LEFT_CURLY_BRACKET block_stmt RIGHT_CURLY_BRACKET WHILE . LEFT_PARANTHESIS NOT_OP LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS RIGHT_PARANTHESIS SEMI_COLON

    LEFT_PARANTHESIS  shift, and go to state 218


State 167

   88 for_loop: FOR LEFT_PARANTHESIS assign_stmt SEMI_COLON NOT_OP . LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS SEMI_COLON for_update RIGHT_PARANTHESIS LEFT_CURLY_BRACKET block_stmt RIGHT_CURLY_BRACKET
   93 condition_list: NOT_OP . LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS LOGICAL_OR_OP and_term
   94               | NOT_OP . LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS LOGICAL_OR_OP LEFT_PARANTHESIS NOT_OP LEFT_PARANTHESIS and_term RIGHT_PARANTHESIS RIGHT_PARANTHESIS

    LEFT_PARANTHESIS  shift, and go to state 219


State 168

   87 for_loop: FOR LEFT_PARANTHESIS assign_stmt SEMI_COLON condition_list . SEMI_COLON for_update RIGHT_PARANTHESIS LEFT_CURLY_BRACKET block_stmt RIGHT_CURLY_BRACKET
   92 condition_list: condition_list . LOGICAL_OR_OP and_term
   95               | condition_list . LOGICAL_OR_OP LEFT_PARANTHESIS NOT_OP LEFT_PARANTHESIS and_term RIGHT_PARANTHESIS RIGHT_PARANTHESIS

    SEMI_COLON     shift, and go to state 220
    LOGICAL_OR_OP  shift, and go to state 137


State 169

   86 while_loop: WHILE LEFT_PARANTHESIS NOT_OP LEFT_PARANTHESIS condition_list . RIGHT_PARANTHESIS RIGHT_PARANTHESIS LEFT_CURLY_BRACKET block_stmt RIGHT_CURLY_BRACKET
   92 condition_list: condition_list . LOGICAL_OR_OP and_term
   93               | NOT_OP LEFT_PARANTHESIS condition_list . RIGHT_PARANTHESIS LOGICAL_OR_OP and_term
   94               | NOT_OP LEFT_PARANTHESIS condition_list . RIGHT_PARANTHESIS LOGICAL_OR_OP LEFT_PARANTHESIS NOT_OP LEFT_PARANTHESIS and_term RIGHT_PARANTHESIS RIGHT_PARANTHESIS
   95               | condition_list . LOGICAL_OR_OP LEFT_PARANTHESIS NOT_OP LEFT_PARANTHESIS and_term RIGHT_PARANTHESIS RIGHT_PARANTHESIS

    LOGICAL_OR_OP      shift, and go to state 137
    RIGHT_PARANTHESIS  shift, and go to state 221


State 170

   97 and_term: LEFT_PARANTHESIS condition RIGHT_PARANTHESIS .

    $default  reduce using rule 97 (and_term)


State 171

  101 condition: IDENTIFIER LESS_THAN_OP IDENTIFIER .

    $default  reduce using rule 101 (condition)


State 172

  102 condition: IDENTIFIER GREATER_THAN_OP IDENTIFIER .

    $default  reduce using rule 102 (condition)


State 173

  103 condition: IDENTIFIER LESS_THAN_OR_EQUAL_OP IDENTIFIER .

    $default  reduce using rule 103 (condition)


State 174

  104 condition: IDENTIFIER GREATER_THAN_OR_EQUAL_OP IDENTIFIER .

    $default  reduce using rule 104 (condition)


State 175

  105 condition: IDENTIFIER EQUALITY_OP IDENTIFIER .

    $default  reduce using rule 105 (condition)


State 176

  106 condition: IDENTIFIER NOT_EQUAL_OP IDENTIFIER .

    $default  reduce using rule 106 (condition)


State 177

  107 condition: numeric_const LESS_THAN_OP IDENTIFIER .

    $default  reduce using rule 107 (condition)


State 178

  113 condition: numeric_const LESS_THAN_OP numeric_const .

    $default  reduce using rule 113 (condition)


State 179

  108 condition: numeric_const GREATER_THAN_OP IDENTIFIER .

    $default  reduce using rule 108 (condition)


State 180

  114 condition: numeric_const GREATER_THAN_OP numeric_const .

    $default  reduce using rule 114 (condition)


State 181

  109 condition: numeric_const LESS_THAN_OR_EQUAL_OP IDENTIFIER .

    $default  reduce using rule 109 (condition)


State 182

  115 condition: numeric_const LESS_THAN_OR_EQUAL_OP numeric_const .

    $default  reduce using rule 115 (condition)


State 183

  110 condition: numeric_const GREATER_THAN_OR_EQUAL_OP IDENTIFIER .

    $default  reduce using rule 110 (condition)


State 184

  116 condition: numeric_const GREATER_THAN_OR_EQUAL_OP numeric_const .

    $default  reduce using rule 116 (condition)


State 185

  111 condition: numeric_const EQUALITY_OP IDENTIFIER .

    $default  reduce using rule 111 (condition)


State 186

  117 condition: numeric_const EQUALITY_OP numeric_const .

    $default  reduce using rule 117 (condition)


State 187

  112 condition: numeric_const NOT_EQUAL_OP IDENTIFIER .

    $default  reduce using rule 112 (condition)


State 188

  118 condition: numeric_const NOT_EQUAL_OP numeric_const .

    $default  reduce using rule 118 (condition)


State 189

   95 condition_list: condition_list LOGICAL_OR_OP LEFT_PARANTHESIS . NOT_OP LEFT_PARANTHESIS and_term RIGHT_PARANTHESIS RIGHT_PARANTHESIS
   97 and_term: LEFT_PARANTHESIS . condition RIGHT_PARANTHESIS

    INT_LITERAL    shift, and go to state 43
    FLOAT_LITERAL  shift, and go to state 44
    BOOL_LITERAL   shift, and go to state 77
    NOT_OP         shift, and go to state 222
    IDENTIFIER     shift, and go to state 123

    numeric_const  go to state 81
    condition      go to state 124


State 190

   92 condition_list: condition_list LOGICAL_OR_OP and_term .
   98 and_term: and_term . LOGICAL_AND_OP condition

    LOGICAL_AND_OP  shift, and go to state 139

    $default  reduce using rule 92 (condition_list)


State 191

   85 while_loop: WHILE LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS LEFT_CURLY_BRACKET . block_stmt RIGHT_CURLY_BRACKET

    error                                  shift, and go to state 1
    DO                                     shift, and go to state 2
    FOR                                    shift, and go to state 3
    WHILE                                  shift, and go to state 4
    BREAK                                  shift, and go to state 5
    CONTINUE                               shift, and go to state 6
    RETURN                                 shift, and go to state 7
    READ_DATA_FUNC_CALL                    shift, and go to state 8
    GET_TIMESTAMP_FUNC_CALL                shift, and go to state 9
    DISPLAY_FUNC_CALL                      shift, and go to state 10
    CONNECT_URL_FUNC_CALL                  shift, and go to state 11
    SEND_INT_TO_CONNECTION_FUNC_CALL       shift, and go to state 12
    RECEIVE_INT_FROM_CONNECTION_FUNC_CALL  shift, and go to state 13
    SET_SWITCH_FUNC_CALL                   shift, and go to state 14
    IF                                     shift, and go to state 15
    TYPE_ID                                shift, and go to state 16
    IDENTIFIER                             shift, and go to state 17

    block_stmt               go to state 223
    stmt                     go to state 22
    matched                  go to state 23
    unmatched                go to state 24
    unconditional_stmt       go to state 25
    increment_stmt           go to state 26
    decrement_stmt           go to state 27
    assign_stmt              go to state 28
    declaration_stmt         go to state 29
    func_call                go to state 30
    reserved_stmt            go to state 31
    primitive_function_call  go to state 32
    loop                     go to state 33
    do_while                 go to state 34
    while_loop               go to state 35
    for_loop                 go to state 36


State 192

   98 and_term: and_term LOGICAL_AND_OP condition .

    $default  reduce using rule 98 (and_term)


State 193

   69 primitive_function_call: READ_DATA_FUNC_CALL LEFT_PARANTHESIS INT_LITERAL RIGHT_PARANTHESIS SEMI_COLON .

    $default  reduce using rule 69 (primitive_function_call)


State 194

   70 primitive_function_call: READ_DATA_FUNC_CALL LEFT_PARANTHESIS IDENTIFIER RIGHT_PARANTHESIS SEMI_COLON .

    $default  reduce using rule 70 (primitive_function_call)


State 195

   71 primitive_function_call: GET_TIMESTAMP_FUNC_CALL LEFT_PARANTHESIS INT_LITERAL RIGHT_PARANTHESIS SEMI_COLON .

    $default  reduce using rule 71 (primitive_function_call)


State 196

   66 factor: LEFT_PARANTHESIS arith_op RIGHT_PARANTHESIS .

    $default  reduce using rule 66 (factor)


State 197

   67 primitive_function_call: DISPLAY_FUNC_CALL LEFT_PARANTHESIS expression RIGHT_PARANTHESIS SEMI_COLON .

    $default  reduce using rule 67 (primitive_function_call)


State 198

   58 arith_op: arith_op ADDITION_OP term .
   61 term: term . MULTIPLICATION_OP factor
   62     | term . DIVISION_OP factor

    MULTIPLICATION_OP  shift, and go to state 149
    DIVISION_OP        shift, and go to state 150

    $default  reduce using rule 58 (arith_op)


State 199

   59 arith_op: arith_op SUBTRACTION_OP term .
   61 term: term . MULTIPLICATION_OP factor
   62     | term . DIVISION_OP factor

    MULTIPLICATION_OP  shift, and go to state 149
    DIVISION_OP        shift, and go to state 150

    $default  reduce using rule 59 (arith_op)


State 200

   61 term: term MULTIPLICATION_OP factor .

    $default  reduce using rule 61 (term)


State 201

   62 term: term DIVISION_OP factor .

    $default  reduce using rule 62 (term)


State 202

   72 primitive_function_call: CONNECT_URL_FUNC_CALL LEFT_PARANTHESIS STRING_LITERAL RIGHT_PARANTHESIS SEMI_COLON .

    $default  reduce using rule 72 (primitive_function_call)


State 203

   74 primitive_function_call: SEND_INT_TO_CONNECTION_FUNC_CALL LEFT_PARANTHESIS STRING_LITERAL COMMA INT_LITERAL . RIGHT_PARANTHESIS SEMI_COLON

    RIGHT_PARANTHESIS  shift, and go to state 224


State 204

   73 primitive_function_call: SEND_INT_TO_CONNECTION_FUNC_CALL LEFT_PARANTHESIS STRING_LITERAL COMMA IDENTIFIER . RIGHT_PARANTHESIS SEMI_COLON

    RIGHT_PARANTHESIS  shift, and go to state 225


State 205

   75 primitive_function_call: RECEIVE_INT_FROM_CONNECTION_FUNC_CALL LEFT_PARANTHESIS STRING_LITERAL RIGHT_PARANTHESIS SEMI_COLON .

    $default  reduce using rule 75 (primitive_function_call)


State 206

   76 primitive_function_call: SET_SWITCH_FUNC_CALL LEFT_PARANTHESIS BOOL_LITERAL COMMA INT_LITERAL . RIGHT_PARANTHESIS SEMI_COLON

    RIGHT_PARANTHESIS  shift, and go to state 226


State 207

   78 primitive_function_call: SET_SWITCH_FUNC_CALL LEFT_PARANTHESIS BOOL_LITERAL COMMA IDENTIFIER . RIGHT_PARANTHESIS SEMI_COLON

    RIGHT_PARANTHESIS  shift, and go to state 227


State 208

   77 primitive_function_call: SET_SWITCH_FUNC_CALL LEFT_PARANTHESIS IDENTIFIER COMMA INT_LITERAL . RIGHT_PARANTHESIS SEMI_COLON

    RIGHT_PARANTHESIS  shift, and go to state 228


State 209

   79 primitive_function_call: SET_SWITCH_FUNC_CALL LEFT_PARANTHESIS IDENTIFIER COMMA IDENTIFIER . RIGHT_PARANTHESIS SEMI_COLON

    RIGHT_PARANTHESIS  shift, and go to state 229


State 210

   92 condition_list: condition_list . LOGICAL_OR_OP and_term
   93               | NOT_OP LEFT_PARANTHESIS condition_list . RIGHT_PARANTHESIS LOGICAL_OR_OP and_term
   94               | NOT_OP LEFT_PARANTHESIS condition_list . RIGHT_PARANTHESIS LOGICAL_OR_OP LEFT_PARANTHESIS NOT_OP LEFT_PARANTHESIS and_term RIGHT_PARANTHESIS RIGHT_PARANTHESIS
   95               | condition_list . LOGICAL_OR_OP LEFT_PARANTHESIS NOT_OP LEFT_PARANTHESIS and_term RIGHT_PARANTHESIS RIGHT_PARANTHESIS

    LOGICAL_OR_OP      shift, and go to state 137
    RIGHT_PARANTHESIS  shift, and go to state 230


State 211

   14 unmatched: IF LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS stmt .

    $default  reduce using rule 14 (unmatched)


State 212

    8 stmt: matched .
   12 matched: IF LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS matched . ELSE matched
   15 unmatched: IF LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS matched . ELSE unmatched

    ELSE  shift, and go to state 231

    $default  reduce using rule 8 (stmt)


State 213

   31 declaration_stmt: TYPE_ID identifier_list ASSIGNMENT_OP expression SEMI_COLON .

    $default  reduce using rule 31 (declaration_stmt)


State 214

   43 arguments: IDENTIFIER COMMA arguments .

    $default  reduce using rule 43 (arguments)


State 215

   39 func_call: IDENTIFIER LEFT_PARANTHESIS arguments RIGHT_PARANTHESIS SEMI_COLON .

    $default  reduce using rule 39 (func_call)


State 216

   45 arguments: const COMMA arguments .

    $default  reduce using rule 45 (arguments)


State 217

   11 func_def: FUNCTION_DEF type_def IDENTIFIER LEFT_PARANTHESIS . argument_list RIGHT_PARANTHESIS LEFT_CURLY_BRACKET block_stmt RIGHT_CURLY_BRACKET

    TYPE_ID  shift, and go to state 232

    $default  reduce using rule 18 (argument_list)

    argument_list  go to state 233


State 218

   83 do_while: DO LEFT_CURLY_BRACKET block_stmt RIGHT_CURLY_BRACKET WHILE LEFT_PARANTHESIS . condition_list RIGHT_PARANTHESIS SEMI_COLON
   84         | DO LEFT_CURLY_BRACKET block_stmt RIGHT_CURLY_BRACKET WHILE LEFT_PARANTHESIS . NOT_OP LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS RIGHT_PARANTHESIS SEMI_COLON

    INT_LITERAL       shift, and go to state 43
    FLOAT_LITERAL     shift, and go to state 44
    BOOL_LITERAL      shift, and go to state 77
    NOT_OP            shift, and go to state 234
    LEFT_PARANTHESIS  shift, and go to state 79
    IDENTIFIER        shift, and go to state 80

    numeric_const   go to state 81
    condition_list  go to state 235
    and_term        go to state 83
    condition       go to state 84


State 219

   88 for_loop: FOR LEFT_PARANTHESIS assign_stmt SEMI_COLON NOT_OP LEFT_PARANTHESIS . condition_list RIGHT_PARANTHESIS SEMI_COLON for_update RIGHT_PARANTHESIS LEFT_CURLY_BRACKET block_stmt RIGHT_CURLY_BRACKET
   93 condition_list: NOT_OP LEFT_PARANTHESIS . condition_list RIGHT_PARANTHESIS LOGICAL_OR_OP and_term
   94               | NOT_OP LEFT_PARANTHESIS . condition_list RIGHT_PARANTHESIS LOGICAL_OR_OP LEFT_PARANTHESIS NOT_OP LEFT_PARANTHESIS and_term RIGHT_PARANTHESIS RIGHT_PARANTHESIS

    INT_LITERAL       shift, and go to state 43
    FLOAT_LITERAL     shift, and go to state 44
    BOOL_LITERAL      shift, and go to state 77
    NOT_OP            shift, and go to state 105
    LEFT_PARANTHESIS  shift, and go to state 79
    IDENTIFIER        shift, and go to state 80

    numeric_const   go to state 81
    condition_list  go to state 236
    and_term        go to state 83
    condition       go to state 84


State 220

   87 for_loop: FOR LEFT_PARANTHESIS assign_stmt SEMI_COLON condition_list SEMI_COLON . for_update RIGHT_PARANTHESIS LEFT_CURLY_BRACKET block_stmt RIGHT_CURLY_BRACKET

    IDENTIFIER  shift, and go to state 237

    assign_stmt  go to state 238
    func_call    go to state 239
    for_update   go to state 240


State 221

   86 while_loop: WHILE LEFT_PARANTHESIS NOT_OP LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS . RIGHT_PARANTHESIS LEFT_CURLY_BRACKET block_stmt RIGHT_CURLY_BRACKET
   93 condition_list: NOT_OP LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS . LOGICAL_OR_OP and_term
   94               | NOT_OP LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS . LOGICAL_OR_OP LEFT_PARANTHESIS NOT_OP LEFT_PARANTHESIS and_term RIGHT_PARANTHESIS RIGHT_PARANTHESIS

    LOGICAL_OR_OP      shift, and go to state 241
    RIGHT_PARANTHESIS  shift, and go to state 242


State 222

   95 condition_list: condition_list LOGICAL_OR_OP LEFT_PARANTHESIS NOT_OP . LEFT_PARANTHESIS and_term RIGHT_PARANTHESIS RIGHT_PARANTHESIS

    LEFT_PARANTHESIS  shift, and go to state 243


State 223

    6 block_stmt: block_stmt . stmt
    7           | block_stmt . COMMENT
   85 while_loop: WHILE LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS LEFT_CURLY_BRACKET block_stmt . RIGHT_CURLY_BRACKET

    error                                  shift, and go to state 1
    COMMENT                                shift, and go to state 72
    DO                                     shift, and go to state 2
    FOR                                    shift, and go to state 3
    WHILE                                  shift, and go to state 4
    BREAK                                  shift, and go to state 5
    CONTINUE                               shift, and go to state 6
    RETURN                                 shift, and go to state 7
    READ_DATA_FUNC_CALL                    shift, and go to state 8
    GET_TIMESTAMP_FUNC_CALL                shift, and go to state 9
    DISPLAY_FUNC_CALL                      shift, and go to state 10
    CONNECT_URL_FUNC_CALL                  shift, and go to state 11
    SEND_INT_TO_CONNECTION_FUNC_CALL       shift, and go to state 12
    RECEIVE_INT_FROM_CONNECTION_FUNC_CALL  shift, and go to state 13
    SET_SWITCH_FUNC_CALL                   shift, and go to state 14
    IF                                     shift, and go to state 15
    RIGHT_CURLY_BRACKET                    shift, and go to state 244
    TYPE_ID                                shift, and go to state 16
    IDENTIFIER                             shift, and go to state 17

    stmt                     go to state 73
    matched                  go to state 23
    unmatched                go to state 24
    unconditional_stmt       go to state 25
    increment_stmt           go to state 26
    decrement_stmt           go to state 27
    assign_stmt              go to state 28
    declaration_stmt         go to state 29
    func_call                go to state 30
    reserved_stmt            go to state 31
    primitive_function_call  go to state 32
    loop                     go to state 33
    do_while                 go to state 34
    while_loop               go to state 35
    for_loop                 go to state 36


State 224

   74 primitive_function_call: SEND_INT_TO_CONNECTION_FUNC_CALL LEFT_PARANTHESIS STRING_LITERAL COMMA INT_LITERAL RIGHT_PARANTHESIS . SEMI_COLON

    SEMI_COLON  shift, and go to state 245


State 225

   73 primitive_function_call: SEND_INT_TO_CONNECTION_FUNC_CALL LEFT_PARANTHESIS STRING_LITERAL COMMA IDENTIFIER RIGHT_PARANTHESIS . SEMI_COLON

    SEMI_COLON  shift, and go to state 246


State 226

   76 primitive_function_call: SET_SWITCH_FUNC_CALL LEFT_PARANTHESIS BOOL_LITERAL COMMA INT_LITERAL RIGHT_PARANTHESIS . SEMI_COLON

    SEMI_COLON  shift, and go to state 247


State 227

   78 primitive_function_call: SET_SWITCH_FUNC_CALL LEFT_PARANTHESIS BOOL_LITERAL COMMA IDENTIFIER RIGHT_PARANTHESIS . SEMI_COLON

    SEMI_COLON  shift, and go to state 248


State 228

   77 primitive_function_call: SET_SWITCH_FUNC_CALL LEFT_PARANTHESIS IDENTIFIER COMMA INT_LITERAL RIGHT_PARANTHESIS . SEMI_COLON

    SEMI_COLON  shift, and go to state 249


State 229

   79 primitive_function_call: SET_SWITCH_FUNC_CALL LEFT_PARANTHESIS IDENTIFIER COMMA IDENTIFIER RIGHT_PARANTHESIS . SEMI_COLON

    SEMI_COLON  shift, and go to state 250


State 230

   93 condition_list: NOT_OP LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS . LOGICAL_OR_OP and_term
   94               | NOT_OP LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS . LOGICAL_OR_OP LEFT_PARANTHESIS NOT_OP LEFT_PARANTHESIS and_term RIGHT_PARANTHESIS RIGHT_PARANTHESIS

    LOGICAL_OR_OP  shift, and go to state 241


State 231

   12 matched: IF LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS matched ELSE . matched
   15 unmatched: IF LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS matched ELSE . unmatched

    DO                                     shift, and go to state 2
    FOR                                    shift, and go to state 3
    WHILE                                  shift, and go to state 4
    BREAK                                  shift, and go to state 5
    CONTINUE                               shift, and go to state 6
    RETURN                                 shift, and go to state 7
    READ_DATA_FUNC_CALL                    shift, and go to state 8
    GET_TIMESTAMP_FUNC_CALL                shift, and go to state 9
    DISPLAY_FUNC_CALL                      shift, and go to state 10
    CONNECT_URL_FUNC_CALL                  shift, and go to state 11
    SEND_INT_TO_CONNECTION_FUNC_CALL       shift, and go to state 12
    RECEIVE_INT_FROM_CONNECTION_FUNC_CALL  shift, and go to state 13
    SET_SWITCH_FUNC_CALL                   shift, and go to state 14
    IF                                     shift, and go to state 15
    TYPE_ID                                shift, and go to state 16
    IDENTIFIER                             shift, and go to state 17

    matched                  go to state 251
    unmatched                go to state 252
    unconditional_stmt       go to state 25
    increment_stmt           go to state 26
    decrement_stmt           go to state 27
    assign_stmt              go to state 28
    declaration_stmt         go to state 29
    func_call                go to state 30
    reserved_stmt            go to state 31
    primitive_function_call  go to state 32
    loop                     go to state 33
    do_while                 go to state 34
    while_loop               go to state 35
    for_loop                 go to state 36


State 232

   16 argument_list: TYPE_ID . IDENTIFIER
   17              | TYPE_ID . IDENTIFIER COMMA argument_list

    IDENTIFIER  shift, and go to state 253


State 233

   11 func_def: FUNCTION_DEF type_def IDENTIFIER LEFT_PARANTHESIS argument_list . RIGHT_PARANTHESIS LEFT_CURLY_BRACKET block_stmt RIGHT_CURLY_BRACKET

    RIGHT_PARANTHESIS  shift, and go to state 254


State 234

   84 do_while: DO LEFT_CURLY_BRACKET block_stmt RIGHT_CURLY_BRACKET WHILE LEFT_PARANTHESIS NOT_OP . LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS RIGHT_PARANTHESIS SEMI_COLON
   93 condition_list: NOT_OP . LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS LOGICAL_OR_OP and_term
   94               | NOT_OP . LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS LOGICAL_OR_OP LEFT_PARANTHESIS NOT_OP LEFT_PARANTHESIS and_term RIGHT_PARANTHESIS RIGHT_PARANTHESIS

    LEFT_PARANTHESIS  shift, and go to state 255


State 235

   83 do_while: DO LEFT_CURLY_BRACKET block_stmt RIGHT_CURLY_BRACKET WHILE LEFT_PARANTHESIS condition_list . RIGHT_PARANTHESIS SEMI_COLON
   92 condition_list: condition_list . LOGICAL_OR_OP and_term
   95               | condition_list . LOGICAL_OR_OP LEFT_PARANTHESIS NOT_OP LEFT_PARANTHESIS and_term RIGHT_PARANTHESIS RIGHT_PARANTHESIS

    LOGICAL_OR_OP      shift, and go to state 137
    RIGHT_PARANTHESIS  shift, and go to state 256


State 236

   88 for_loop: FOR LEFT_PARANTHESIS assign_stmt SEMI_COLON NOT_OP LEFT_PARANTHESIS condition_list . RIGHT_PARANTHESIS SEMI_COLON for_update RIGHT_PARANTHESIS LEFT_CURLY_BRACKET block_stmt RIGHT_CURLY_BRACKET
   92 condition_list: condition_list . LOGICAL_OR_OP and_term
   93               | NOT_OP LEFT_PARANTHESIS condition_list . RIGHT_PARANTHESIS LOGICAL_OR_OP and_term
   94               | NOT_OP LEFT_PARANTHESIS condition_list . RIGHT_PARANTHESIS LOGICAL_OR_OP LEFT_PARANTHESIS NOT_OP LEFT_PARANTHESIS and_term RIGHT_PARANTHESIS RIGHT_PARANTHESIS
   95               | condition_list . LOGICAL_OR_OP LEFT_PARANTHESIS NOT_OP LEFT_PARANTHESIS and_term RIGHT_PARANTHESIS RIGHT_PARANTHESIS

    LOGICAL_OR_OP      shift, and go to state 137
    RIGHT_PARANTHESIS  shift, and go to state 257


State 237

   29 assign_stmt: IDENTIFIER . ASSIGNMENT_OP expression SEMI_COLON
   39 func_call: IDENTIFIER . LEFT_PARANTHESIS arguments RIGHT_PARANTHESIS SEMI_COLON
   40          | IDENTIFIER . DOT IDENTIFIER SEMI_COLON

    ASSIGNMENT_OP     shift, and go to state 63
    DOT               shift, and go to state 64
    LEFT_PARANTHESIS  shift, and go to state 67


State 238

   89 for_update: assign_stmt .

    $default  reduce using rule 89 (for_update)


State 239

   90 for_update: func_call .

    $default  reduce using rule 90 (for_update)


State 240

   87 for_loop: FOR LEFT_PARANTHESIS assign_stmt SEMI_COLON condition_list SEMI_COLON for_update . RIGHT_PARANTHESIS LEFT_CURLY_BRACKET block_stmt RIGHT_CURLY_BRACKET

    RIGHT_PARANTHESIS  shift, and go to state 258


State 241

   93 condition_list: NOT_OP LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS LOGICAL_OR_OP . and_term
   94               | NOT_OP LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS LOGICAL_OR_OP . LEFT_PARANTHESIS NOT_OP LEFT_PARANTHESIS and_term RIGHT_PARANTHESIS RIGHT_PARANTHESIS

    INT_LITERAL       shift, and go to state 43
    FLOAT_LITERAL     shift, and go to state 44
    BOOL_LITERAL      shift, and go to state 77
    LEFT_PARANTHESIS  shift, and go to state 259
    IDENTIFIER        shift, and go to state 80

    numeric_const  go to state 81
    and_term       go to state 260
    condition      go to state 84


State 242

   86 while_loop: WHILE LEFT_PARANTHESIS NOT_OP LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS RIGHT_PARANTHESIS . LEFT_CURLY_BRACKET block_stmt RIGHT_CURLY_BRACKET

    LEFT_CURLY_BRACKET  shift, and go to state 261


State 243

   95 condition_list: condition_list LOGICAL_OR_OP LEFT_PARANTHESIS NOT_OP LEFT_PARANTHESIS . and_term RIGHT_PARANTHESIS RIGHT_PARANTHESIS

    INT_LITERAL       shift, and go to state 43
    FLOAT_LITERAL     shift, and go to state 44
    BOOL_LITERAL      shift, and go to state 77
    LEFT_PARANTHESIS  shift, and go to state 79
    IDENTIFIER        shift, and go to state 80

    numeric_const  go to state 81
    and_term       go to state 262
    condition      go to state 84


State 244

   85 while_loop: WHILE LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS LEFT_CURLY_BRACKET block_stmt RIGHT_CURLY_BRACKET .

    $default  reduce using rule 85 (while_loop)


State 245

   74 primitive_function_call: SEND_INT_TO_CONNECTION_FUNC_CALL LEFT_PARANTHESIS STRING_LITERAL COMMA INT_LITERAL RIGHT_PARANTHESIS SEMI_COLON .

    $default  reduce using rule 74 (primitive_function_call)


State 246

   73 primitive_function_call: SEND_INT_TO_CONNECTION_FUNC_CALL LEFT_PARANTHESIS STRING_LITERAL COMMA IDENTIFIER RIGHT_PARANTHESIS SEMI_COLON .

    $default  reduce using rule 73 (primitive_function_call)


State 247

   76 primitive_function_call: SET_SWITCH_FUNC_CALL LEFT_PARANTHESIS BOOL_LITERAL COMMA INT_LITERAL RIGHT_PARANTHESIS SEMI_COLON .

    $default  reduce using rule 76 (primitive_function_call)


State 248

   78 primitive_function_call: SET_SWITCH_FUNC_CALL LEFT_PARANTHESIS BOOL_LITERAL COMMA IDENTIFIER RIGHT_PARANTHESIS SEMI_COLON .

    $default  reduce using rule 78 (primitive_function_call)


State 249

   77 primitive_function_call: SET_SWITCH_FUNC_CALL LEFT_PARANTHESIS IDENTIFIER COMMA INT_LITERAL RIGHT_PARANTHESIS SEMI_COLON .

    $default  reduce using rule 77 (primitive_function_call)


State 250

   79 primitive_function_call: SET_SWITCH_FUNC_CALL LEFT_PARANTHESIS IDENTIFIER COMMA IDENTIFIER RIGHT_PARANTHESIS SEMI_COLON .

    $default  reduce using rule 79 (primitive_function_call)


State 251

   12 matched: IF LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS matched ELSE matched .

    $default  reduce using rule 12 (matched)


State 252

   15 unmatched: IF LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS matched ELSE unmatched .

    $default  reduce using rule 15 (unmatched)


State 253

   16 argument_list: TYPE_ID IDENTIFIER .
   17              | TYPE_ID IDENTIFIER . COMMA argument_list

    COMMA  shift, and go to state 263

    $default  reduce using rule 16 (argument_list)


State 254

   11 func_def: FUNCTION_DEF type_def IDENTIFIER LEFT_PARANTHESIS argument_list RIGHT_PARANTHESIS . LEFT_CURLY_BRACKET block_stmt RIGHT_CURLY_BRACKET

    LEFT_CURLY_BRACKET  shift, and go to state 264


State 255

   84 do_while: DO LEFT_CURLY_BRACKET block_stmt RIGHT_CURLY_BRACKET WHILE LEFT_PARANTHESIS NOT_OP LEFT_PARANTHESIS . condition_list RIGHT_PARANTHESIS RIGHT_PARANTHESIS SEMI_COLON
   93 condition_list: NOT_OP LEFT_PARANTHESIS . condition_list RIGHT_PARANTHESIS LOGICAL_OR_OP and_term
   94               | NOT_OP LEFT_PARANTHESIS . condition_list RIGHT_PARANTHESIS LOGICAL_OR_OP LEFT_PARANTHESIS NOT_OP LEFT_PARANTHESIS and_term RIGHT_PARANTHESIS RIGHT_PARANTHESIS

    INT_LITERAL       shift, and go to state 43
    FLOAT_LITERAL     shift, and go to state 44
    BOOL_LITERAL      shift, and go to state 77
    NOT_OP            shift, and go to state 105
    LEFT_PARANTHESIS  shift, and go to state 79
    IDENTIFIER        shift, and go to state 80

    numeric_const   go to state 81
    condition_list  go to state 265
    and_term        go to state 83
    condition       go to state 84


State 256

   83 do_while: DO LEFT_CURLY_BRACKET block_stmt RIGHT_CURLY_BRACKET WHILE LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS . SEMI_COLON

    SEMI_COLON  shift, and go to state 266


State 257

   88 for_loop: FOR LEFT_PARANTHESIS assign_stmt SEMI_COLON NOT_OP LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS . SEMI_COLON for_update RIGHT_PARANTHESIS LEFT_CURLY_BRACKET block_stmt RIGHT_CURLY_BRACKET
   93 condition_list: NOT_OP LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS . LOGICAL_OR_OP and_term
   94               | NOT_OP LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS . LOGICAL_OR_OP LEFT_PARANTHESIS NOT_OP LEFT_PARANTHESIS and_term RIGHT_PARANTHESIS RIGHT_PARANTHESIS

    SEMI_COLON     shift, and go to state 267
    LOGICAL_OR_OP  shift, and go to state 241


State 258

   87 for_loop: FOR LEFT_PARANTHESIS assign_stmt SEMI_COLON condition_list SEMI_COLON for_update RIGHT_PARANTHESIS . LEFT_CURLY_BRACKET block_stmt RIGHT_CURLY_BRACKET

    LEFT_CURLY_BRACKET  shift, and go to state 268


State 259

   94 condition_list: NOT_OP LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS LOGICAL_OR_OP LEFT_PARANTHESIS . NOT_OP LEFT_PARANTHESIS and_term RIGHT_PARANTHESIS RIGHT_PARANTHESIS
   97 and_term: LEFT_PARANTHESIS . condition RIGHT_PARANTHESIS

    INT_LITERAL    shift, and go to state 43
    FLOAT_LITERAL  shift, and go to state 44
    BOOL_LITERAL   shift, and go to state 77
    NOT_OP         shift, and go to state 269
    IDENTIFIER     shift, and go to state 123

    numeric_const  go to state 81
    condition      go to state 124


State 260

   93 condition_list: NOT_OP LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS LOGICAL_OR_OP and_term .
   98 and_term: and_term . LOGICAL_AND_OP condition

    LOGICAL_AND_OP  shift, and go to state 139

    $default  reduce using rule 93 (condition_list)


State 261

   86 while_loop: WHILE LEFT_PARANTHESIS NOT_OP LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS RIGHT_PARANTHESIS LEFT_CURLY_BRACKET . block_stmt RIGHT_CURLY_BRACKET

    error                                  shift, and go to state 1
    DO                                     shift, and go to state 2
    FOR                                    shift, and go to state 3
    WHILE                                  shift, and go to state 4
    BREAK                                  shift, and go to state 5
    CONTINUE                               shift, and go to state 6
    RETURN                                 shift, and go to state 7
    READ_DATA_FUNC_CALL                    shift, and go to state 8
    GET_TIMESTAMP_FUNC_CALL                shift, and go to state 9
    DISPLAY_FUNC_CALL                      shift, and go to state 10
    CONNECT_URL_FUNC_CALL                  shift, and go to state 11
    SEND_INT_TO_CONNECTION_FUNC_CALL       shift, and go to state 12
    RECEIVE_INT_FROM_CONNECTION_FUNC_CALL  shift, and go to state 13
    SET_SWITCH_FUNC_CALL                   shift, and go to state 14
    IF                                     shift, and go to state 15
    TYPE_ID                                shift, and go to state 16
    IDENTIFIER                             shift, and go to state 17

    block_stmt               go to state 270
    stmt                     go to state 22
    matched                  go to state 23
    unmatched                go to state 24
    unconditional_stmt       go to state 25
    increment_stmt           go to state 26
    decrement_stmt           go to state 27
    assign_stmt              go to state 28
    declaration_stmt         go to state 29
    func_call                go to state 30
    reserved_stmt            go to state 31
    primitive_function_call  go to state 32
    loop                     go to state 33
    do_while                 go to state 34
    while_loop               go to state 35
    for_loop                 go to state 36


State 262

   95 condition_list: condition_list LOGICAL_OR_OP LEFT_PARANTHESIS NOT_OP LEFT_PARANTHESIS and_term . RIGHT_PARANTHESIS RIGHT_PARANTHESIS
   98 and_term: and_term . LOGICAL_AND_OP condition

    LOGICAL_AND_OP     shift, and go to state 139
    RIGHT_PARANTHESIS  shift, and go to state 271


State 263

   17 argument_list: TYPE_ID IDENTIFIER COMMA . argument_list

    TYPE_ID  shift, and go to state 232

    $default  reduce using rule 18 (argument_list)

    argument_list  go to state 272


State 264

   11 func_def: FUNCTION_DEF type_def IDENTIFIER LEFT_PARANTHESIS argument_list RIGHT_PARANTHESIS LEFT_CURLY_BRACKET . block_stmt RIGHT_CURLY_BRACKET

    error                                  shift, and go to state 1
    DO                                     shift, and go to state 2
    FOR                                    shift, and go to state 3
    WHILE                                  shift, and go to state 4
    BREAK                                  shift, and go to state 5
    CONTINUE                               shift, and go to state 6
    RETURN                                 shift, and go to state 7
    READ_DATA_FUNC_CALL                    shift, and go to state 8
    GET_TIMESTAMP_FUNC_CALL                shift, and go to state 9
    DISPLAY_FUNC_CALL                      shift, and go to state 10
    CONNECT_URL_FUNC_CALL                  shift, and go to state 11
    SEND_INT_TO_CONNECTION_FUNC_CALL       shift, and go to state 12
    RECEIVE_INT_FROM_CONNECTION_FUNC_CALL  shift, and go to state 13
    SET_SWITCH_FUNC_CALL                   shift, and go to state 14
    IF                                     shift, and go to state 15
    TYPE_ID                                shift, and go to state 16
    IDENTIFIER                             shift, and go to state 17

    block_stmt               go to state 273
    stmt                     go to state 22
    matched                  go to state 23
    unmatched                go to state 24
    unconditional_stmt       go to state 25
    increment_stmt           go to state 26
    decrement_stmt           go to state 27
    assign_stmt              go to state 28
    declaration_stmt         go to state 29
    func_call                go to state 30
    reserved_stmt            go to state 31
    primitive_function_call  go to state 32
    loop                     go to state 33
    do_while                 go to state 34
    while_loop               go to state 35
    for_loop                 go to state 36


State 265

   84 do_while: DO LEFT_CURLY_BRACKET block_stmt RIGHT_CURLY_BRACKET WHILE LEFT_PARANTHESIS NOT_OP LEFT_PARANTHESIS condition_list . RIGHT_PARANTHESIS RIGHT_PARANTHESIS SEMI_COLON
   92 condition_list: condition_list . LOGICAL_OR_OP and_term
   93               | NOT_OP LEFT_PARANTHESIS condition_list . RIGHT_PARANTHESIS LOGICAL_OR_OP and_term
   94               | NOT_OP LEFT_PARANTHESIS condition_list . RIGHT_PARANTHESIS LOGICAL_OR_OP LEFT_PARANTHESIS NOT_OP LEFT_PARANTHESIS and_term RIGHT_PARANTHESIS RIGHT_PARANTHESIS
   95               | condition_list . LOGICAL_OR_OP LEFT_PARANTHESIS NOT_OP LEFT_PARANTHESIS and_term RIGHT_PARANTHESIS RIGHT_PARANTHESIS

    LOGICAL_OR_OP      shift, and go to state 137
    RIGHT_PARANTHESIS  shift, and go to state 274


State 266

   83 do_while: DO LEFT_CURLY_BRACKET block_stmt RIGHT_CURLY_BRACKET WHILE LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS SEMI_COLON .

    $default  reduce using rule 83 (do_while)


State 267

   88 for_loop: FOR LEFT_PARANTHESIS assign_stmt SEMI_COLON NOT_OP LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS SEMI_COLON . for_update RIGHT_PARANTHESIS LEFT_CURLY_BRACKET block_stmt RIGHT_CURLY_BRACKET

    IDENTIFIER  shift, and go to state 237

    assign_stmt  go to state 238
    func_call    go to state 239
    for_update   go to state 275


State 268

   87 for_loop: FOR LEFT_PARANTHESIS assign_stmt SEMI_COLON condition_list SEMI_COLON for_update RIGHT_PARANTHESIS LEFT_CURLY_BRACKET . block_stmt RIGHT_CURLY_BRACKET

    error                                  shift, and go to state 1
    DO                                     shift, and go to state 2
    FOR                                    shift, and go to state 3
    WHILE                                  shift, and go to state 4
    BREAK                                  shift, and go to state 5
    CONTINUE                               shift, and go to state 6
    RETURN                                 shift, and go to state 7
    READ_DATA_FUNC_CALL                    shift, and go to state 8
    GET_TIMESTAMP_FUNC_CALL                shift, and go to state 9
    DISPLAY_FUNC_CALL                      shift, and go to state 10
    CONNECT_URL_FUNC_CALL                  shift, and go to state 11
    SEND_INT_TO_CONNECTION_FUNC_CALL       shift, and go to state 12
    RECEIVE_INT_FROM_CONNECTION_FUNC_CALL  shift, and go to state 13
    SET_SWITCH_FUNC_CALL                   shift, and go to state 14
    IF                                     shift, and go to state 15
    TYPE_ID                                shift, and go to state 16
    IDENTIFIER                             shift, and go to state 17

    block_stmt               go to state 276
    stmt                     go to state 22
    matched                  go to state 23
    unmatched                go to state 24
    unconditional_stmt       go to state 25
    increment_stmt           go to state 26
    decrement_stmt           go to state 27
    assign_stmt              go to state 28
    declaration_stmt         go to state 29
    func_call                go to state 30
    reserved_stmt            go to state 31
    primitive_function_call  go to state 32
    loop                     go to state 33
    do_while                 go to state 34
    while_loop               go to state 35
    for_loop                 go to state 36


State 269

   94 condition_list: NOT_OP LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS LOGICAL_OR_OP LEFT_PARANTHESIS NOT_OP . LEFT_PARANTHESIS and_term RIGHT_PARANTHESIS RIGHT_PARANTHESIS

    LEFT_PARANTHESIS  shift, and go to state 277


State 270

    6 block_stmt: block_stmt . stmt
    7           | block_stmt . COMMENT
   86 while_loop: WHILE LEFT_PARANTHESIS NOT_OP LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS RIGHT_PARANTHESIS LEFT_CURLY_BRACKET block_stmt . RIGHT_CURLY_BRACKET

    error                                  shift, and go to state 1
    COMMENT                                shift, and go to state 72
    DO                                     shift, and go to state 2
    FOR                                    shift, and go to state 3
    WHILE                                  shift, and go to state 4
    BREAK                                  shift, and go to state 5
    CONTINUE                               shift, and go to state 6
    RETURN                                 shift, and go to state 7
    READ_DATA_FUNC_CALL                    shift, and go to state 8
    GET_TIMESTAMP_FUNC_CALL                shift, and go to state 9
    DISPLAY_FUNC_CALL                      shift, and go to state 10
    CONNECT_URL_FUNC_CALL                  shift, and go to state 11
    SEND_INT_TO_CONNECTION_FUNC_CALL       shift, and go to state 12
    RECEIVE_INT_FROM_CONNECTION_FUNC_CALL  shift, and go to state 13
    SET_SWITCH_FUNC_CALL                   shift, and go to state 14
    IF                                     shift, and go to state 15
    RIGHT_CURLY_BRACKET                    shift, and go to state 278
    TYPE_ID                                shift, and go to state 16
    IDENTIFIER                             shift, and go to state 17

    stmt                     go to state 73
    matched                  go to state 23
    unmatched                go to state 24
    unconditional_stmt       go to state 25
    increment_stmt           go to state 26
    decrement_stmt           go to state 27
    assign_stmt              go to state 28
    declaration_stmt         go to state 29
    func_call                go to state 30
    reserved_stmt            go to state 31
    primitive_function_call  go to state 32
    loop                     go to state 33
    do_while                 go to state 34
    while_loop               go to state 35
    for_loop                 go to state 36


State 271

   95 condition_list: condition_list LOGICAL_OR_OP LEFT_PARANTHESIS NOT_OP LEFT_PARANTHESIS and_term RIGHT_PARANTHESIS . RIGHT_PARANTHESIS

    RIGHT_PARANTHESIS  shift, and go to state 279


State 272

   17 argument_list: TYPE_ID IDENTIFIER COMMA argument_list .

    $default  reduce using rule 17 (argument_list)


State 273

    6 block_stmt: block_stmt . stmt
    7           | block_stmt . COMMENT
   11 func_def: FUNCTION_DEF type_def IDENTIFIER LEFT_PARANTHESIS argument_list RIGHT_PARANTHESIS LEFT_CURLY_BRACKET block_stmt . RIGHT_CURLY_BRACKET

    error                                  shift, and go to state 1
    COMMENT                                shift, and go to state 72
    DO                                     shift, and go to state 2
    FOR                                    shift, and go to state 3
    WHILE                                  shift, and go to state 4
    BREAK                                  shift, and go to state 5
    CONTINUE                               shift, and go to state 6
    RETURN                                 shift, and go to state 7
    READ_DATA_FUNC_CALL                    shift, and go to state 8
    GET_TIMESTAMP_FUNC_CALL                shift, and go to state 9
    DISPLAY_FUNC_CALL                      shift, and go to state 10
    CONNECT_URL_FUNC_CALL                  shift, and go to state 11
    SEND_INT_TO_CONNECTION_FUNC_CALL       shift, and go to state 12
    RECEIVE_INT_FROM_CONNECTION_FUNC_CALL  shift, and go to state 13
    SET_SWITCH_FUNC_CALL                   shift, and go to state 14
    IF                                     shift, and go to state 15
    RIGHT_CURLY_BRACKET                    shift, and go to state 280
    TYPE_ID                                shift, and go to state 16
    IDENTIFIER                             shift, and go to state 17

    stmt                     go to state 73
    matched                  go to state 23
    unmatched                go to state 24
    unconditional_stmt       go to state 25
    increment_stmt           go to state 26
    decrement_stmt           go to state 27
    assign_stmt              go to state 28
    declaration_stmt         go to state 29
    func_call                go to state 30
    reserved_stmt            go to state 31
    primitive_function_call  go to state 32
    loop                     go to state 33
    do_while                 go to state 34
    while_loop               go to state 35
    for_loop                 go to state 36


State 274

   84 do_while: DO LEFT_CURLY_BRACKET block_stmt RIGHT_CURLY_BRACKET WHILE LEFT_PARANTHESIS NOT_OP LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS . RIGHT_PARANTHESIS SEMI_COLON
   93 condition_list: NOT_OP LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS . LOGICAL_OR_OP and_term
   94               | NOT_OP LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS . LOGICAL_OR_OP LEFT_PARANTHESIS NOT_OP LEFT_PARANTHESIS and_term RIGHT_PARANTHESIS RIGHT_PARANTHESIS

    LOGICAL_OR_OP      shift, and go to state 241
    RIGHT_PARANTHESIS  shift, and go to state 281


State 275

   88 for_loop: FOR LEFT_PARANTHESIS assign_stmt SEMI_COLON NOT_OP LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS SEMI_COLON for_update . RIGHT_PARANTHESIS LEFT_CURLY_BRACKET block_stmt RIGHT_CURLY_BRACKET

    RIGHT_PARANTHESIS  shift, and go to state 282


State 276

    6 block_stmt: block_stmt . stmt
    7           | block_stmt . COMMENT
   87 for_loop: FOR LEFT_PARANTHESIS assign_stmt SEMI_COLON condition_list SEMI_COLON for_update RIGHT_PARANTHESIS LEFT_CURLY_BRACKET block_stmt . RIGHT_CURLY_BRACKET

    error                                  shift, and go to state 1
    COMMENT                                shift, and go to state 72
    DO                                     shift, and go to state 2
    FOR                                    shift, and go to state 3
    WHILE                                  shift, and go to state 4
    BREAK                                  shift, and go to state 5
    CONTINUE                               shift, and go to state 6
    RETURN                                 shift, and go to state 7
    READ_DATA_FUNC_CALL                    shift, and go to state 8
    GET_TIMESTAMP_FUNC_CALL                shift, and go to state 9
    DISPLAY_FUNC_CALL                      shift, and go to state 10
    CONNECT_URL_FUNC_CALL                  shift, and go to state 11
    SEND_INT_TO_CONNECTION_FUNC_CALL       shift, and go to state 12
    RECEIVE_INT_FROM_CONNECTION_FUNC_CALL  shift, and go to state 13
    SET_SWITCH_FUNC_CALL                   shift, and go to state 14
    IF                                     shift, and go to state 15
    RIGHT_CURLY_BRACKET                    shift, and go to state 283
    TYPE_ID                                shift, and go to state 16
    IDENTIFIER                             shift, and go to state 17

    stmt                     go to state 73
    matched                  go to state 23
    unmatched                go to state 24
    unconditional_stmt       go to state 25
    increment_stmt           go to state 26
    decrement_stmt           go to state 27
    assign_stmt              go to state 28
    declaration_stmt         go to state 29
    func_call                go to state 30
    reserved_stmt            go to state 31
    primitive_function_call  go to state 32
    loop                     go to state 33
    do_while                 go to state 34
    while_loop               go to state 35
    for_loop                 go to state 36


State 277

   94 condition_list: NOT_OP LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS LOGICAL_OR_OP LEFT_PARANTHESIS NOT_OP LEFT_PARANTHESIS . and_term RIGHT_PARANTHESIS RIGHT_PARANTHESIS

    INT_LITERAL       shift, and go to state 43
    FLOAT_LITERAL     shift, and go to state 44
    BOOL_LITERAL      shift, and go to state 77
    LEFT_PARANTHESIS  shift, and go to state 79
    IDENTIFIER        shift, and go to state 80

    numeric_const  go to state 81
    and_term       go to state 284
    condition      go to state 84


State 278

   86 while_loop: WHILE LEFT_PARANTHESIS NOT_OP LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS RIGHT_PARANTHESIS LEFT_CURLY_BRACKET block_stmt RIGHT_CURLY_BRACKET .

    $default  reduce using rule 86 (while_loop)


State 279

   95 condition_list: condition_list LOGICAL_OR_OP LEFT_PARANTHESIS NOT_OP LEFT_PARANTHESIS and_term RIGHT_PARANTHESIS RIGHT_PARANTHESIS .

    $default  reduce using rule 95 (condition_list)


State 280

   11 func_def: FUNCTION_DEF type_def IDENTIFIER LEFT_PARANTHESIS argument_list RIGHT_PARANTHESIS LEFT_CURLY_BRACKET block_stmt RIGHT_CURLY_BRACKET .

    $default  reduce using rule 11 (func_def)


State 281

   84 do_while: DO LEFT_CURLY_BRACKET block_stmt RIGHT_CURLY_BRACKET WHILE LEFT_PARANTHESIS NOT_OP LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS RIGHT_PARANTHESIS . SEMI_COLON

    SEMI_COLON  shift, and go to state 285


State 282

   88 for_loop: FOR LEFT_PARANTHESIS assign_stmt SEMI_COLON NOT_OP LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS SEMI_COLON for_update RIGHT_PARANTHESIS . LEFT_CURLY_BRACKET block_stmt RIGHT_CURLY_BRACKET

    LEFT_CURLY_BRACKET  shift, and go to state 286


State 283

   87 for_loop: FOR LEFT_PARANTHESIS assign_stmt SEMI_COLON condition_list SEMI_COLON for_update RIGHT_PARANTHESIS LEFT_CURLY_BRACKET block_stmt RIGHT_CURLY_BRACKET .

    $default  reduce using rule 87 (for_loop)


State 284

   94 condition_list: NOT_OP LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS LOGICAL_OR_OP LEFT_PARANTHESIS NOT_OP LEFT_PARANTHESIS and_term . RIGHT_PARANTHESIS RIGHT_PARANTHESIS
   98 and_term: and_term . LOGICAL_AND_OP condition

    LOGICAL_AND_OP     shift, and go to state 139
    RIGHT_PARANTHESIS  shift, and go to state 287


State 285

   84 do_while: DO LEFT_CURLY_BRACKET block_stmt RIGHT_CURLY_BRACKET WHILE LEFT_PARANTHESIS NOT_OP LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS RIGHT_PARANTHESIS SEMI_COLON .

    $default  reduce using rule 84 (do_while)


State 286

   88 for_loop: FOR LEFT_PARANTHESIS assign_stmt SEMI_COLON NOT_OP LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS SEMI_COLON for_update RIGHT_PARANTHESIS LEFT_CURLY_BRACKET . block_stmt RIGHT_CURLY_BRACKET

    error                                  shift, and go to state 1
    DO                                     shift, and go to state 2
    FOR                                    shift, and go to state 3
    WHILE                                  shift, and go to state 4
    BREAK                                  shift, and go to state 5
    CONTINUE                               shift, and go to state 6
    RETURN                                 shift, and go to state 7
    READ_DATA_FUNC_CALL                    shift, and go to state 8
    GET_TIMESTAMP_FUNC_CALL                shift, and go to state 9
    DISPLAY_FUNC_CALL                      shift, and go to state 10
    CONNECT_URL_FUNC_CALL                  shift, and go to state 11
    SEND_INT_TO_CONNECTION_FUNC_CALL       shift, and go to state 12
    RECEIVE_INT_FROM_CONNECTION_FUNC_CALL  shift, and go to state 13
    SET_SWITCH_FUNC_CALL                   shift, and go to state 14
    IF                                     shift, and go to state 15
    TYPE_ID                                shift, and go to state 16
    IDENTIFIER                             shift, and go to state 17

    block_stmt               go to state 288
    stmt                     go to state 22
    matched                  go to state 23
    unmatched                go to state 24
    unconditional_stmt       go to state 25
    increment_stmt           go to state 26
    decrement_stmt           go to state 27
    assign_stmt              go to state 28
    declaration_stmt         go to state 29
    func_call                go to state 30
    reserved_stmt            go to state 31
    primitive_function_call  go to state 32
    loop                     go to state 33
    do_while                 go to state 34
    while_loop               go to state 35
    for_loop                 go to state 36


State 287

   94 condition_list: NOT_OP LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS LOGICAL_OR_OP LEFT_PARANTHESIS NOT_OP LEFT_PARANTHESIS and_term RIGHT_PARANTHESIS . RIGHT_PARANTHESIS

    RIGHT_PARANTHESIS  shift, and go to state 289


State 288

    6 block_stmt: block_stmt . stmt
    7           | block_stmt . COMMENT
   88 for_loop: FOR LEFT_PARANTHESIS assign_stmt SEMI_COLON NOT_OP LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS SEMI_COLON for_update RIGHT_PARANTHESIS LEFT_CURLY_BRACKET block_stmt . RIGHT_CURLY_BRACKET

    error                                  shift, and go to state 1
    COMMENT                                shift, and go to state 72
    DO                                     shift, and go to state 2
    FOR                                    shift, and go to state 3
    WHILE                                  shift, and go to state 4
    BREAK                                  shift, and go to state 5
    CONTINUE                               shift, and go to state 6
    RETURN                                 shift, and go to state 7
    READ_DATA_FUNC_CALL                    shift, and go to state 8
    GET_TIMESTAMP_FUNC_CALL                shift, and go to state 9
    DISPLAY_FUNC_CALL                      shift, and go to state 10
    CONNECT_URL_FUNC_CALL                  shift, and go to state 11
    SEND_INT_TO_CONNECTION_FUNC_CALL       shift, and go to state 12
    RECEIVE_INT_FROM_CONNECTION_FUNC_CALL  shift, and go to state 13
    SET_SWITCH_FUNC_CALL                   shift, and go to state 14
    IF                                     shift, and go to state 15
    RIGHT_CURLY_BRACKET                    shift, and go to state 290
    TYPE_ID                                shift, and go to state 16
    IDENTIFIER                             shift, and go to state 17

    stmt                     go to state 73
    matched                  go to state 23
    unmatched                go to state 24
    unconditional_stmt       go to state 25
    increment_stmt           go to state 26
    decrement_stmt           go to state 27
    assign_stmt              go to state 28
    declaration_stmt         go to state 29
    func_call                go to state 30
    reserved_stmt            go to state 31
    primitive_function_call  go to state 32
    loop                     go to state 33
    do_while                 go to state 34
    while_loop               go to state 35
    for_loop                 go to state 36


State 289

   94 condition_list: NOT_OP LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS LOGICAL_OR_OP LEFT_PARANTHESIS NOT_OP LEFT_PARANTHESIS and_term RIGHT_PARANTHESIS RIGHT_PARANTHESIS .

    $default  reduce using rule 94 (condition_list)


State 290

   88 for_loop: FOR LEFT_PARANTHESIS assign_stmt SEMI_COLON NOT_OP LEFT_PARANTHESIS condition_list RIGHT_PARANTHESIS SEMI_COLON for_update RIGHT_PARANTHESIS LEFT_CURLY_BRACKET block_stmt RIGHT_CURLY_BRACKET .

    $default  reduce using rule 88 (for_loop)
